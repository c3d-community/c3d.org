"use strict";(globalThis.webpackChunkc_3_d_org=globalThis.webpackChunkc_3_d_org||[]).push([[6100],{7979:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"introduction/a-c3d-synopsis/a-brief-history","title":"A Brief History","description":"Before the C3D format was created, each motion capture system vendor created data files in custom formats that contained the data collected.  Systems created a unique collection of data files that their users had to figure out how to process.  Each motion capture manufacturer understood how their systems worked but had virtually no experience of the clinical and research data environments in which the systems were used.  This made life difficult for individual laboratories and very hard for researchers in multiple data collection environments to share their data with researchers using different systems while working on the same research area, grant, or project.  Originally the only way to share and compare data clinically was to print out the results on paper.  The C3D format was created in the National Institute of Health in Bethesda, Maryland under the direction of Steven Stanhope, to rectify this situation by creating a file format that put the preservation, compatibility, and integrity of every data collection, with the ability to share and compare data, at the top of the end-users concerns.","source":"@site/docs/introduction/a-c3d-synopsis/a-brief-history.md","sourceDirName":"introduction/a-c3d-synopsis","slug":"/introduction/a-c3d-synopsis/a-brief-history","permalink":"/c3d.org/introduction/a-c3d-synopsis/a-brief-history","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"A Brief History"},"sidebar":"tutorialSidebar","previous":{"title":"A C3D Synopsis","permalink":"/c3d.org/introduction/a-c3d-synopsis/"},"next":{"title":"The C3D File Structure","permalink":"/c3d.org/introduction/the-c3d-file-structure/"}}');var n=a(4848),o=a(8453);const r={title:"A Brief History"},s=void 0,l={},c=[];function d(e){const t={a:"a",h2:"h2",li:"li",ol:"ol",p:"p",section:"section",sup:"sup",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Before the C3D format was created, each motion capture system vendor created data files in custom formats that contained the data collected.  Systems created a unique collection of data files that their users had to figure out how to process.  Each motion capture manufacturer understood how their systems worked but had virtually no experience of the clinical and research data environments in which the systems were used.",(0,n.jsx)(t.sup,{children:(0,n.jsx)(t.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),"  This made life difficult for individual laboratories and very hard for researchers in multiple data collection environments to share their data with researchers using different systems while working on the same research area, grant, or project.  Originally the only way to share and compare data clinically was to print out the results on paper.  The C3D format was created in the National Institute of Health in Bethesda, Maryland under the direction of Steven Stanhope, to rectify this situation by creating a file format that put the preservation, compatibility, and integrity of every data collection, with the ability to share and compare data, at the top of the end-users concerns."]}),"\n",(0,n.jsxs)(t.p,{children:["The precursor to the C3D file format was AMASS, a binary file containing a header ",(0,n.jsx)(t.a,{href:"/glossary-of-terms#section",children:"section"}),", plus interleaved 3D coordinate and analog data that was first used by the SELSPOT 3D motion analysis system in the early 1980s.  An important goal in the design of AMASS was to have a format environment that met all needs for both parameter input/exchange and data storage.  This was achieved by adding a standard, readily accessible, parameter section to all files, which documents the individual parameter values and describes all of the data included in the file resulting in a universal file structure that supports a wide range of file formats."]}),"\n",(0,n.jsx)(t.p,{children:"By the late 1980\u2019s, the AMASS software, written in FORTRAN, had evolved to support camera lens distortion correction and calibration, with automated data reduction, and automatic marker tracking.  The AMASS software suite ran on the RSX11-M and VAX/VMS based systems manufactured by Digital Equipment Corporation (DEC) and used C3D as its output data format.  AMASS was the first software application to offer completely automatic 3D trajectory calculations for complex moving targets while compensating for camera lens distortion.  This was a significant improvement when compared to commercial photogrammetry software available at that time which required that the operator identify the individual 2D trajectories manually and then stored the 3D trajectories in one file format, the analog data in another file format, and information defining the data collection environment in additional files, each with their own unique format."}),"\n",(0,n.jsxs)(t.p,{children:["In 1988 Oxford Metrics Ltd., obtained distribution rights for the AMASS software from ADTECH (a company created by Andrew Dainis) after observing the ability of the AMASS software at the National Institutes of Health to automatically track and identify 3D trajectories from data collected with an early Oxford Metrics motion capture system while needing virtually no operator involvement.  The AMASS software used a single file format definition to store the data and ",(0,n.jsx)(t.a,{href:"/glossary-of-terms#parameters",children:"parameters"})," that it generated, in one uniform binary file format.  This was used by each of the AMASS applications, each storing its data in a separate file as the data collection environment was described, data collected, processed, and finally combined into a single file that stored the ",(0,n.jsx)(t.a,{href:"/glossary-of-terms#3d-point",children:"3D point"})," co-ordinates and analog measurements, together with all the information (parameters) needed to access and process the contents of the file \u2013 this was the original C3D file format."]}),"\n",(0,n.jsx)(t.p,{children:"In the early days, virtually all motion capture software was written in a computer specific assembler language.  All of the AMASS applications were written in FORTRAN, a factor that had some influence on the internal C3D structures, which were first documented so that clinical analysis and research applications, written in Oregon Software Pascal-2, could access the files in DEC and MSDOS environments."}),"\n",(0,n.jsxs)(t.p,{children:["Initially, Oxford Metrics Ltd., (Oxford, England) offered the AMASS software as an option for its RSX-11M based hardware systems in the USA which, prior to the introduction of the C3D format, had produced a handful of different files, each with a unique format, for each ",(0,n.jsx)(t.a,{href:"/glossary-of-terms#trial",children:"trial"})," of data.  A few AMASS systems were installed with the Vicon RSX-11M systems before the introduction of the Vicon VAX/VMS based systems which supported AMASS as the automated trajectory reconstruction application and C3D as the default data output format.  The Vicon-VX VAX/VMS software package integrated the AMASS software within a DCL based menu system and was considerably more successful than its command-line driven RSX-11M based predecessors, eventually selling many hundreds of systems worldwide."]}),"\n",(0,n.jsx)(t.p,{children:"The first substantial \u201cfreeware\u201d application supporting the C3D file format emerged in 1991 with the release of ANZ,/Telios/Show3D, a motion data analysis package written by Dwight Meglan, at Ohio State University, as part of his doctoral thesis.  Command line driven, and running under MS-DOS, this package offered substantial modeling and kinematic features together with output graphs and animations."}),"\n",(0,n.jsxs)(t.p,{children:["The introduction in 1992 of the Vicon Clinical Manager application (VCM), running on Microsoft Windows 3 and, performing clinical gait analysis calculations derived from the Helen Hayes Hospital Software, generated considerable interest in the C3D format.  The graphical application enabled users to generate clinical gait analysis graphs from motion capture data and its popularity placed the C3D file format in the position that it occupies today as the standard format for biomechanical ",(0,n.jsx)(t.a,{href:"/glossary-of-terms#3d-data",children:"3D data"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"Once VCM dominated the clinical gait analysis software market, Oxford Metrics released a Microsoft Windows based data collection and photogrammetry application to replace AMASS while maintaining the C3D file format.  As a result ADTECH updated AMASS to process raw video data files from multiple other motion capture system vendors using both Intel and Silicon Graphics hardware."}),"\n",(0,n.jsx)(t.p,{children:"This period also saw the release of MOVE3D, a sophisticated 3D biomechanics analysis program developed by Tom Kepple at NIH, which further expanded the use of C3D files and led to the formation of C-Motion and the Visual3D suite.  The availability of both MOVE3D for biomechanics researchers, and Vicon Clinical Manager for the clinical gait analysis market, were major factors in the creation of a significant user base for the C3D file format."}),"\n",(0,n.jsx)(t.p,{children:"The first commercial C3D application was the C3Deditor (Motion Lab Systems, 1997), which gave users the ability to easily assess, edit, and repair all C3D files in the graphical Windows environment, regardless of the original data collection environment.  Prior to the C3Deditor the only tools available for C3D development were a limited set of MS-DOS applications (PRM etc.) written in FORTRAN and released with the AMASS software - these, together with the C3Deditor, became the standards against which all C3D applications were evaluated."}),"\n",(0,n.jsx)(t.p,{children:"The next widely used application was the C3Dserver, a free application that was written by Motion Lab Systems to make C3D files available for all users in the Windows environment so that they could access the C3D data that their motion capture systems were creating."}),"\n",(0,n.jsx)(t.p,{children:"As a result of the adoption and support by many different vendors, the C3D format has become the standard in virtually all clinical gait and biomechanics laboratories, as well as many other areas such as the animation and entertainment industries where it is supported by almost all leading animation packages and many user written applications."}),"\n",(0,n.jsx)(t.p,{children:"In 2012 C3D Labs, a Russian CAD developer released a CAD format that used the .C3D filetype but the format is completely unrelated to the ADTECH C3D format, resulting in files that are unreadable in the 3D biomechanics and motion capture environments."}),"\n","\n",(0,n.jsxs)(t.section,{"data-footnotes":!0,className:"footnotes",children:[(0,n.jsx)(t.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{id:"user-content-fn-1",children:["\n",(0,n.jsxs)(t.p,{children:["My experience installing and supporting 3D motion capture systems since 1981 in the research and clinical environments was that each ",(0,n.jsx)(t.a,{href:"/glossary-of-terms#3d-data",children:"3D data"})," collection setup was easy but getting each system configured to meet a user\u2019s biomechanics or clinical needs always took a lot of time and effort. Moving to the C3D format solved every problem. ",(0,n.jsx)(t.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>s});var i=a(6540);const n={},o=i.createContext(n);function r(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);