"use strict";(globalThis.webpackChunkc_3_d_org=globalThis.webpackChunkc_3_d_org||[]).push([[6485],{4908:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"required-parameters/the-force-platform-group/force-platform-type/index","title":"FORCE_PLATFORM:TYPE","description":"The FORCEPLATFORMUSED parameter.  Initially, the C3D specification supported three force platform types (1-3), with the Type-4 platform added in the early 90\u2019s to support the inclusion of the full force plate calibration matrix.  Over the years since, various manufacturers have occasionally created additional force platform descriptions to define specific force data collection environments but these are not commonly seen.","source":"@site/docs/required-parameters/the-force-platform-group/force-platform-type/index.md","sourceDirName":"required-parameters/the-force-platform-group/force-platform-type","slug":"/required-parameters/the-force-platform-group/force-platform-type/","permalink":"/required-parameters/the-force-platform-group/force-platform-type/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"FORCE_PLATFORM:TYPE"},"sidebar":"tutorialSidebar","previous":{"title":"TYPE-4","permalink":"/required-parameters/the-force-platform-group/force-platform-origin/type-4"},"next":{"title":"TYPE-1","permalink":"/required-parameters/the-force-platform-group/force-platform-type/type-1"}}');var o=a(4848),n=a(8453);const s={title:"FORCE_PLATFORM:TYPE"},i=void 0,c={},l=[];function p(e){const t={p:"p",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["The FORCE_PLATFORM",":TYPE"," parameter is an array of signed integers that define the type of force platform output expected from each force platform.  The TYPE array size must be equal to or greater than the value of the FORCE_PLATFORM",":USED"," parameter.  Initially, the C3D specification supported three force platform types (1-3), with the Type-4 platform added in the early 90\u2019s to support the inclusion of the full force plate calibration matrix.  Over the years since, various manufacturers have occasionally created additional force platform descriptions to define specific force data collection environments but these are not commonly seen."]}),"\n",(0,o.jsxs)(t.p,{children:["The analog data from each force platform is stored in the associated analog channels defined by the FORCE_PLATFORM",":CHANNEL"," parameter \u2013 the data stored from each force plate channel is scaled by the ANALOG",":SCALE"," parameter.  The default storage method should be to store the unprocessed analog samples from each force plate channel in the associated analog channel.  These values are then scaled using the associated floating-point ANALOG",":SCALE"," or CAL_MATRIX parameters, which prevents data corruption if the C3D file format is ever changed from floating-point to integer."]}),"\n",(0,o.jsxs)(t.p,{children:["Starting in 2007, one manufacturer started storing pre-scaled force plate data in floating-point formatted C3D files, an approach that has since been used by other manufacturers, resulting in much larger file sizes that require more processing power.  The pre-scaled processed data is defined as force plate TYPE-2 data with the calculated force and moment data stored in the analog channels defined by the FORCE_PLATFORM",":CHANNEL"," parameter.  The relevant ANALOG",":SCALE"," parameters set to a value of 1.00, indicating that the data has already been scaled by the Nexus software and can be interpreted directly as three forces (Fx, Fy and Fz) and three moments (Mx, My and Mz)."]}),"\n",(0,o.jsx)(t.p,{children:"While this scheme relieves the end-user of the problems of calculating and applying the SCALE or CAL_MATRIX parameters to the data, it eliminates the ability to review the raw force plate signals in the event of any problems with the force plate.  As a result end-users have no way of verifying the data collection conditions or the correct force plate scaling factors during any future review or processing of the force data."}),"\n",(0,o.jsxs)(t.p,{children:["This decision means that when pre-scaled data is stored using the floating-point format with the relevant ANALOG",":SCALE"," parameters set to a value of 1.00, the C3D file cannot be converted to the integer format without rescaling the force plate data.  This is because integer overflow can occur as the stored force plate data (especially the Mx and My moments) can easily exceed the 16-bit integer storage range when the force plate details and scales are not stored in the C3D file.  This essentially defeats one of the major features of the C3D format \u2013 because the application has failed to record the scaling values - this is not a result of using floating-point storage."]}),"\n",(0,o.jsx)(t.p,{children:"An addition effect of storing pre-scaled force data is that the stored values appear to be very accurate (typically storing data values with calculated submicron resolutions) although the actual measurement accuracy does not match the recorded results."})]})}function f(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>i});var r=a(6540);const o={},n=r.createContext(o);function s(e){const t=r.useContext(n);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);