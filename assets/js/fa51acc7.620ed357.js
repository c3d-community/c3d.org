"use strict";(globalThis.webpackChunkc_3_d_org=globalThis.webpackChunkc_3_d_org||[]).push([[9184],{9885:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"The C3D File Format","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/the-c3d-file-format/use-and-distribution","label":"Use and Distribution","docId":"the-c3d-file-format/use-and-distribution","unlisted":false},{"type":"link","href":"/c3d.org/the-c3d-file-format/revision-history","label":"Revision History","docId":"the-c3d-file-format/revision-history","unlisted":false}],"href":"/c3d.org/the-c3d-file-format/"},{"type":"link","href":"/c3d.org/preface","label":"Preface","docId":"preface","unlisted":false},{"type":"category","label":"Introduction","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"A C3D Synopsis","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/introduction/a-c3d-synopsis/a-brief-history","label":"A Brief History","docId":"introduction/a-c3d-synopsis/a-brief-history","unlisted":false}],"href":"/c3d.org/introduction/a-c3d-synopsis/"},{"type":"category","label":"The C3D File Structure","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Physical Measurements","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/introduction/the-c3d-file-structure/physical-measurements/data-synchronization","label":"Data Synchronization","docId":"introduction/the-c3d-file-structure/physical-measurements/data-synchronization","unlisted":false}],"href":"/c3d.org/introduction/the-c3d-file-structure/physical-measurements/"},{"type":"link","href":"/c3d.org/introduction/the-c3d-file-structure/parameter-information","label":"Parameter Information","docId":"introduction/the-c3d-file-structure/parameter-information","unlisted":false}],"href":"/c3d.org/introduction/the-c3d-file-structure/"},{"type":"category","label":"Overview","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Data Section","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/introduction/overview/data-section/3d-point-data-format","label":"3D Point data format","docId":"introduction/overview/data-section/3d-point-data-format","unlisted":false},{"type":"link","href":"/c3d.org/introduction/overview/data-section/alternative-data-formats","label":"Alternative Data Formats","docId":"introduction/overview/data-section/alternative-data-formats","unlisted":false},{"type":"link","href":"/c3d.org/introduction/overview/data-section/data-storage","label":"Data Storage","docId":"introduction/overview/data-section/data-storage","unlisted":false}],"href":"/c3d.org/introduction/overview/data-section/"},{"type":"link","href":"/c3d.org/introduction/overview/c3d-file-description","label":"C3D File Description","docId":"introduction/overview/c3d-file-description","unlisted":false},{"type":"link","href":"/c3d.org/introduction/overview/header-section","label":"Header Section","docId":"introduction/overview/header-section","unlisted":false},{"type":"link","href":"/c3d.org/introduction/overview/parameter-section","label":"Parameter Section","docId":"introduction/overview/parameter-section","unlisted":false}],"href":"/c3d.org/introduction/overview/"},{"type":"link","href":"/c3d.org/introduction/specification","label":"Specification","docId":"introduction/specification","unlisted":false}],"href":"/c3d.org/introduction/Introduction"},{"type":"category","label":"Additional Parameters","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Additional ANALOG parameters","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/additional-parameters/additional-analog-parameters/analog-descriptions2","label":"ANALOG:DESCRIPTIONS2","docId":"additional-parameters/additional-analog-parameters/analog-descriptions2","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/additional-analog-parameters/analog-labels2","label":"ANALOG:LABELS2","docId":"additional-parameters/additional-analog-parameters/analog-labels2","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/additional-analog-parameters/analog-offset2","label":"ANALOG:OFFSET2","docId":"additional-parameters/additional-analog-parameters/analog-offset2","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/additional-analog-parameters/analog-scale2","label":"ANALOG:SCALE2","docId":"additional-parameters/additional-analog-parameters/analog-scale2","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/additional-analog-parameters/analog-units2","label":"ANALOG:UNITS2","docId":"additional-parameters/additional-analog-parameters/analog-units2","unlisted":false}],"href":"/c3d.org/additional-parameters/additional-analog-parameters/"},{"type":"category","label":"Additional FORCE_PLATFORM parameters","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/additional-parameters/additional-force-platform-parameters/force-platform-cal-matrix","label":"FORCE_PLATFORM:CAL_MATRIX","docId":"additional-parameters/additional-force-platform-parameters/force-platform-cal-matrix","unlisted":false}],"href":"/c3d.org/additional-parameters/additional-force-platform-parameters/"},{"type":"category","label":"Additional POINT parameters","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/additional-parameters/additional-point-parameters/long-frames","label":"LONG_FRAMES","docId":"additional-parameters/additional-point-parameters/long-frames","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/additional-point-parameters/point-descriptions2","label":"POINT:DESCRIPTIONS2","docId":"additional-parameters/additional-point-parameters/point-descriptions2","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/additional-point-parameters/point-labels2","label":"POINT:LABELS2","docId":"additional-parameters/additional-point-parameters/point-labels2","unlisted":false}],"href":"/c3d.org/additional-parameters/additional-point-parameters/"},{"type":"category","label":"The EVENT_CONTEXT Group","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/additional-parameters/the-event-context-group/event-context-colours","label":"EVENT_CONTEXT:COLOURS","docId":"additional-parameters/the-event-context-group/event-context-colours","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/the-event-context-group/event-context-descriptions","label":"EVENT_CONTEXT:DESCRIPTIONS","docId":"additional-parameters/the-event-context-group/event-context-descriptions","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/the-event-context-group/event-context-icon-ids","label":"EVENT_CONTEXT:ICON_IDS","docId":"additional-parameters/the-event-context-group/event-context-icon-ids","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/the-event-context-group/event-context-labels","label":"EVENT_CONTEXT:LABELS","docId":"additional-parameters/the-event-context-group/event-context-labels","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/the-event-context-group/event-context-used","label":"EVENT_CONTEXT:USED","docId":"additional-parameters/the-event-context-group/event-context-used","unlisted":false}],"href":"/c3d.org/additional-parameters/the-event-context-group/"},{"type":"category","label":"The EVENT Group","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/additional-parameters/the-event-group/event-contexts","label":"EVENT:CONTEXTS","docId":"additional-parameters/the-event-group/event-contexts","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/the-event-group/event-descriptions","label":"EVENT:DESCRIPTIONS","docId":"additional-parameters/the-event-group/event-descriptions","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/the-event-group/event-generic-flags","label":"EVENT:GENERIC_FLAGS","docId":"additional-parameters/the-event-group/event-generic-flags","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/the-event-group/event-icon-ids","label":"EVENT:ICON_IDS","docId":"additional-parameters/the-event-group/event-icon-ids","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/the-event-group/event-labels","label":"EVENT:LABELS","docId":"additional-parameters/the-event-group/event-labels","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/the-event-group/event-subjects","label":"EVENT:SUBJECTS","docId":"additional-parameters/the-event-group/event-subjects","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/the-event-group/event-times","label":"EVENT:TIMES","docId":"additional-parameters/the-event-group/event-times","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/the-event-group/event-used","label":"EVENT:USED","docId":"additional-parameters/the-event-group/event-used","unlisted":false}],"href":"/c3d.org/additional-parameters/the-event-group/"},{"type":"category","label":"The TRIAL Group","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/additional-parameters/the-trial-group/the-trial-frame-calculation","label":"The TRIAL frame calculation","docId":"additional-parameters/the-trial-group/the-trial-frame-calculation","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/the-trial-group/trial-actual-end-field","label":"TRIAL:ACTUAL_END_FIELD","docId":"additional-parameters/the-trial-group/trial-actual-end-field","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/the-trial-group/trial-actual-start-field","label":"TRIAL:ACTUAL_START_FIELD","docId":"additional-parameters/the-trial-group/trial-actual-start-field","unlisted":false},{"type":"link","href":"/c3d.org/additional-parameters/the-trial-group/trial-camera-rate","label":"TRIAL:CAMERA_RATE","docId":"additional-parameters/the-trial-group/trial-camera-rate","unlisted":false}],"href":"/c3d.org/additional-parameters/the-trial-group/"}],"href":"/c3d.org/additional-parameters/"},{"type":"category","label":"Appendix","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Choosing a C3D format","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"C3D Parameters","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/appendix/choosing-a-c3d-format/c3d-parameters/parameter-interpretation","label":"Parameter interpretation","docId":"appendix/choosing-a-c3d-format/c3d-parameters/parameter-interpretation","unlisted":false}],"href":"/c3d.org/appendix/choosing-a-c3d-format/c3d-parameters/"},{"type":"link","href":"/c3d.org/appendix/choosing-a-c3d-format/sample-rate-limitations","label":"Sample Rate Limitations","docId":"appendix/choosing-a-c3d-format/sample-rate-limitations","unlisted":false}],"href":"/c3d.org/appendix/choosing-a-c3d-format/"},{"type":"category","label":"Integers and Bytes","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/appendix/integers-and-bytes/signed-numbers","label":"Signed numbers","docId":"appendix/integers-and-bytes/signed-numbers","unlisted":false},{"type":"link","href":"/c3d.org/appendix/integers-and-bytes/unsigned-numbers","label":"Unsigned numbers","docId":"appendix/integers-and-bytes/unsigned-numbers","unlisted":false}],"href":"/c3d.org/appendix/integers-and-bytes/"},{"type":"category","label":"The C3D frame count","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/appendix/the-c3d-frame-count/maintaining-c3d-frame-count-compatibility","label":"Maintaining C3D frame count compatibility","docId":"appendix/the-c3d-frame-count/maintaining-c3d-frame-count-compatibility","unlisted":false},{"type":"link","href":"/c3d.org/appendix/the-c3d-frame-count/reading-the-frame-count","label":"Reading the frame count","docId":"appendix/the-c3d-frame-count/reading-the-frame-count","unlisted":false},{"type":"link","href":"/c3d.org/appendix/the-c3d-frame-count/updating-the-c3d-frame-count","label":"Updating the C3D frame count","docId":"appendix/the-c3d-frame-count/updating-the-c3d-frame-count","unlisted":false},{"type":"link","href":"/c3d.org/appendix/the-c3d-frame-count/writing-the-c3d-frame-count","label":"Writing the C3D frame count","docId":"appendix/the-c3d-frame-count/writing-the-c3d-frame-count","unlisted":false}],"href":"/c3d.org/appendix/the-c3d-frame-count/"},{"type":"category","label":"Troubleshooting C3D files","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/appendix/troubleshooting-c3d-files/diagnosing-c3d-problems","label":"Diagnosing C3D problems","docId":"appendix/troubleshooting-c3d-files/diagnosing-c3d-problems","unlisted":false},{"type":"link","href":"/c3d.org/appendix/troubleshooting-c3d-files/repairing-c3d-files","label":"Repairing C3D files","docId":"appendix/troubleshooting-c3d-files/repairing-c3d-files","unlisted":false}],"href":"/c3d.org/appendix/troubleshooting-c3d-files/"}],"href":"/c3d.org/appendix/"},{"type":"category","label":"Application Parameters","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"The ANALOG Group","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/application-parameters/the-analog-group/analog-gain","label":"ANALOG:GAIN","docId":"application-parameters/the-analog-group/analog-gain","unlisted":false}],"href":"/c3d.org/application-parameters/the-analog-group/"},{"type":"link","href":"/c3d.org/application-parameters/the-analysis-group","label":"The ANALYSIS Group","docId":"application-parameters/the-analysis-group","unlisted":false},{"type":"category","label":"The MANUFACTURER Group","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/application-parameters/the-manufacturer-group/manufacturer-company","label":"MANUFACTURER:COMPANY","docId":"application-parameters/the-manufacturer-group/manufacturer-company","unlisted":false},{"type":"link","href":"/c3d.org/application-parameters/the-manufacturer-group/manufacturer-edited","label":"MANUFACTURER:EDITED","docId":"application-parameters/the-manufacturer-group/manufacturer-edited","unlisted":false},{"type":"link","href":"/c3d.org/application-parameters/the-manufacturer-group/manufacturer-software","label":"MANUFACTURER:SOFTWARE","docId":"application-parameters/the-manufacturer-group/manufacturer-software","unlisted":false},{"type":"link","href":"/c3d.org/application-parameters/the-manufacturer-group/manufacturer-version","label":"MANUFACTURER:VERSION","docId":"application-parameters/the-manufacturer-group/manufacturer-version","unlisted":false}],"href":"/c3d.org/application-parameters/the-manufacturer-group/"},{"type":"category","label":"The POINT Group","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/application-parameters/the-point-group/point-x-screen","label":"POINT:X_SCREEN","docId":"application-parameters/the-point-group/point-x-screen","unlisted":false},{"type":"link","href":"/c3d.org/application-parameters/the-point-group/point-y-screen","label":"POINT:Y_SCREEN","docId":"application-parameters/the-point-group/point-y-screen","unlisted":false}],"href":"/c3d.org/application-parameters/the-point-group/"},{"type":"category","label":"The SEG Group","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/application-parameters/the-seg-group/seg-acc-factor","label":"SEG:ACC_FACTOR","docId":"application-parameters/the-seg-group/seg-acc-factor","unlisted":false},{"type":"link","href":"/c3d.org/application-parameters/the-seg-group/seg-data-limits","label":"SEG:DATA_LIMITS","docId":"application-parameters/the-seg-group/seg-data-limits","unlisted":false},{"type":"link","href":"/c3d.org/application-parameters/the-seg-group/seg-intersection-limit","label":"SEG:INTERSECTION_LIMIT","docId":"application-parameters/the-seg-group/seg-intersection-limit","unlisted":false},{"type":"link","href":"/c3d.org/application-parameters/the-seg-group/seg-marker-diameter","label":"SEG:MARKER_DIAMETER","docId":"application-parameters/the-seg-group/seg-marker-diameter","unlisted":false},{"type":"link","href":"/c3d.org/application-parameters/the-seg-group/seg-noise-factor","label":"SEG:NOISE_FACTOR","docId":"application-parameters/the-seg-group/seg-noise-factor","unlisted":false},{"type":"link","href":"/c3d.org/application-parameters/the-seg-group/seg-residual-error-factor","label":"SEG:RESIDUAL_ERROR_FACTOR","docId":"application-parameters/the-seg-group/seg-residual-error-factor","unlisted":false}],"href":"/c3d.org/application-parameters/the-seg-group/"},{"type":"category","label":"The SUBJECTS Group","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/application-parameters/the-subjects-group/data-encryption","label":"Data encryption","docId":"application-parameters/the-subjects-group/data-encryption","unlisted":false}],"href":"/c3d.org/application-parameters/the-subjects-group/"}],"href":"/c3d.org/application-parameters/"},{"type":"link","href":"/c3d.org/glossary-of-terms","label":"Glossary of Terms","docId":"glossary-of-terms","unlisted":false},{"type":"category","label":"Required Parameters","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"The ANALOG group","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/required-parameters/the-analog-group/analog-bits","label":"ANALOG:BITS","docId":"required-parameters/the-analog-group/analog-bits","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-analog-group/analog-descriptions","label":"ANALOG:DESCRIPTIONS","docId":"required-parameters/the-analog-group/analog-descriptions","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-analog-group/analog-format","label":"ANALOG:FORMAT","docId":"required-parameters/the-analog-group/analog-format","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-analog-group/analog-gen-scale","label":"ANALOG:GEN_SCALE","docId":"required-parameters/the-analog-group/analog-gen-scale","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-analog-group/analog-labels","label":"ANALOG:LABELS","docId":"required-parameters/the-analog-group/analog-labels","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-analog-group/analog-offset","label":"ANALOG:OFFSET","docId":"required-parameters/the-analog-group/analog-offset","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-analog-group/analog-rate","label":"ANALOG:RATE","docId":"required-parameters/the-analog-group/analog-rate","unlisted":false},{"type":"category","label":"ANALOG:SCALE","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/required-parameters/the-analog-group/analog-scale/calculating-scale-values-for-emg-systems","label":"Calculating SCALE values for EMG systems","docId":"required-parameters/the-analog-group/analog-scale/calculating-scale-values-for-emg-systems","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-analog-group/analog-scale/calculating-scale-values-for-force-plates","label":"Calculating SCALE values for force plates","docId":"required-parameters/the-analog-group/analog-scale/calculating-scale-values-for-force-plates","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-analog-group/analog-scale/calculating-scale-values-for-load-cells","label":"Calculating SCALE values for load cells","docId":"required-parameters/the-analog-group/analog-scale/calculating-scale-values-for-load-cells","unlisted":false}],"href":"/c3d.org/required-parameters/the-analog-group/analog-scale/"},{"type":"link","href":"/c3d.org/required-parameters/the-analog-group/analog-units","label":"ANALOG:UNITS","docId":"required-parameters/the-analog-group/analog-units","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-analog-group/analog-used","label":"ANALOG:USED","docId":"required-parameters/the-analog-group/analog-used","unlisted":false}],"href":"/c3d.org/required-parameters/the-analog-group/"},{"type":"category","label":"The FORCE_PLATFORM group","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/required-parameters/the-force-platform-group/force-platform-channel","label":"FORCE_PLATFORM:CHANNEL","docId":"required-parameters/the-force-platform-group/force-platform-channel","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-force-platform-group/force-platform-corners","label":"FORCE_PLATFORM:CORNERS","docId":"required-parameters/the-force-platform-group/force-platform-corners","unlisted":false},{"type":"category","label":"FORCE_PLATFORM:ORIGIN","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/required-parameters/the-force-platform-group/force-platform-origin/type-1","label":"TYPE-1","docId":"required-parameters/the-force-platform-group/force-platform-origin/type-1","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-force-platform-group/force-platform-origin/type-2","label":"TYPE-2","docId":"required-parameters/the-force-platform-group/force-platform-origin/type-2","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-force-platform-group/force-platform-origin/type-3","label":"TYPE-3","docId":"required-parameters/the-force-platform-group/force-platform-origin/type-3","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-force-platform-group/force-platform-origin/type-4","label":"TYPE-4","docId":"required-parameters/the-force-platform-group/force-platform-origin/type-4","unlisted":false}],"href":"/c3d.org/required-parameters/the-force-platform-group/force-platform-origin/"},{"type":"category","label":"FORCE_PLATFORM:TYPE","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/required-parameters/the-force-platform-group/force-platform-type/type-1","label":"TYPE-1","docId":"required-parameters/the-force-platform-group/force-platform-type/type-1","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-force-platform-group/force-platform-type/type-2","label":"TYPE-2","docId":"required-parameters/the-force-platform-group/force-platform-type/type-2","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-force-platform-group/force-platform-type/type-3","label":"TYPE-3","docId":"required-parameters/the-force-platform-group/force-platform-type/type-3","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-force-platform-group/force-platform-type/type-4","label":"TYPE-4","docId":"required-parameters/the-force-platform-group/force-platform-type/type-4","unlisted":false}],"href":"/c3d.org/required-parameters/the-force-platform-group/force-platform-type/"},{"type":"link","href":"/c3d.org/required-parameters/the-force-platform-group/force-platform-used","label":"FORCE_PLATFORM:USED","docId":"required-parameters/the-force-platform-group/force-platform-used","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-force-platform-group/force-platform-zero","label":"FORCE_PLATFORM:ZERO","docId":"required-parameters/the-force-platform-group/force-platform-zero","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-force-platform-group/specifying-force-platform-parameters","label":"Specifying Force Platform Parameters","docId":"required-parameters/the-force-platform-group/specifying-force-platform-parameters","unlisted":false}],"href":"/c3d.org/required-parameters/the-force-platform-group/"},{"type":"category","label":"The POINT group","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/required-parameters/the-point-group/point-data-start","label":"POINT:DATA_START","docId":"required-parameters/the-point-group/point-data-start","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-point-group/point-descriptions","label":"POINT:DESCRIPTIONS","docId":"required-parameters/the-point-group/point-descriptions","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-point-group/point-frames","label":"POINT:FRAMES","docId":"required-parameters/the-point-group/point-frames","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-point-group/point-labels","label":"POINT:LABELS","docId":"required-parameters/the-point-group/point-labels","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-point-group/point-rate","label":"POINT:RATE","docId":"required-parameters/the-point-group/point-rate","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-point-group/point-scale","label":"POINT:SCALE","docId":"required-parameters/the-point-group/point-scale","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-point-group/point-units","label":"POINT:UNITS","docId":"required-parameters/the-point-group/point-units","unlisted":false},{"type":"link","href":"/c3d.org/required-parameters/the-point-group/point-used","label":"POINT:USED","docId":"required-parameters/the-point-group/point-used","unlisted":false}],"href":"/c3d.org/required-parameters/the-point-group/"}],"href":"/c3d.org/required-parameters/"},{"type":"category","label":"The 3D Point Data Section","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Analog Data Storage","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Analog Data - Floating-point format","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/the-3d-point-data-section/analog-data-section/analog-data-floating-point-format/notes-for-programmers-floating-point-analog-data","label":"Notes for programmers - Floating-point Analog Data","docId":"the-3d-point-data-section/analog-data-section/analog-data-floating-point-format/notes-for-programmers-floating-point-analog-data","unlisted":false}],"href":"/c3d.org/the-3d-point-data-section/analog-data-section/analog-data-floating-point-format/"},{"type":"category","label":"Analog Data - Integer Format","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/the-3d-point-data-section/analog-data-section/analog-data-integer-format/notes-for-programmers-integer-analog-data","label":"Notes for programmers - Integer Analog Data","docId":"the-3d-point-data-section/analog-data-section/analog-data-integer-format/notes-for-programmers-integer-analog-data","unlisted":false}],"href":"/c3d.org/the-3d-point-data-section/analog-data-section/analog-data-integer-format/"}],"href":"/c3d.org/the-3d-point-data-section/analog-data-section/"},{"type":"category","label":"Description","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"3D Data - Floating-point Format","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/the-3d-point-data-section/description/3d-data-floating-point-format/notes-for-programmers-floating-point-3d-data","label":"Notes for programmers - Floating-point 3D Data","docId":"the-3d-point-data-section/description/3d-data-floating-point-format/notes-for-programmers-floating-point-3d-data","unlisted":false}],"href":"/c3d.org/the-3d-point-data-section/description/3d-data-floating-point-format/"},{"type":"category","label":"3D Data - Integer Format","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/the-3d-point-data-section/description/3d-data-integer-format/notes-for-programmers-integer-3d-data","label":"Notes for programmers - Integer 3D Data","docId":"the-3d-point-data-section/description/3d-data-integer-format/notes-for-programmers-integer-3d-data","unlisted":false}],"href":"/c3d.org/the-3d-point-data-section/description/3d-data-integer-format/"},{"type":"link","href":"/c3d.org/the-3d-point-data-section/description/3d-point-residuals","label":"3D Point Residuals","docId":"the-3d-point-data-section/description/3d-point-residuals","unlisted":false},{"type":"link","href":"/c3d.org/the-3d-point-data-section/description/camera-contribution-mask","label":"Camera Contribution Mask","docId":"the-3d-point-data-section/description/camera-contribution-mask","unlisted":false}],"href":"/c3d.org/the-3d-point-data-section/description/"},{"type":"category","label":"Scaling Resolution","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/the-3d-point-data-section/scaling-resolution/3d-point-data","label":"3D Point Data","docId":"the-3d-point-data-section/scaling-resolution/3d-point-data","unlisted":false},{"type":"link","href":"/c3d.org/the-3d-point-data-section/scaling-resolution/analog-data","label":"Analog Data","docId":"the-3d-point-data-section/scaling-resolution/analog-data","unlisted":false}],"href":"/c3d.org/the-3d-point-data-section/scaling-resolution/"}],"href":"/c3d.org/the-3d-point-data-section/"},{"type":"category","label":"The Header Section","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Header Events","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/the-header-section/header-events/event-interpretation","label":"Event Interpretation","docId":"the-header-section/header-events/event-interpretation","unlisted":false},{"type":"link","href":"/c3d.org/the-header-section/header-events/event-labels","label":"Event Labels","docId":"the-header-section/header-events/event-labels","unlisted":false},{"type":"link","href":"/c3d.org/the-header-section/header-events/event-status","label":"Event Status","docId":"the-header-section/header-events/event-status","unlisted":false},{"type":"link","href":"/c3d.org/the-header-section/header-events/event-times","label":"Event Times","docId":"the-header-section/header-events/event-times","unlisted":false}],"href":"/c3d.org/the-header-section/header-events/"},{"type":"category","label":"Header Record Function","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/the-header-section/header-record-function/notes-for-programmers-c3d-header","label":"Notes for Programmers - C3D Header","docId":"the-header-section/header-record-function/notes-for-programmers-c3d-header","unlisted":false}],"href":"/c3d.org/the-header-section/header-record-function/"}],"href":"/c3d.org/the-header-section/"},{"type":"category","label":"The Parameter Section","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"C3D Groups and Parameters","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/the-parameter-section/c3d-groups-and-parameters/group-format","label":"Group Format","docId":"the-parameter-section/c3d-groups-and-parameters/group-format","unlisted":false},{"type":"category","label":"Locked Parameters","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/c3d.org/the-parameter-section/c3d-groups-and-parameters/locked-parameters/notes-for-programmers-parameters-and-groups","label":"Notes for Programmers - Parameters and Groups","docId":"the-parameter-section/c3d-groups-and-parameters/locked-parameters/notes-for-programmers-parameters-and-groups","unlisted":false}],"href":"/c3d.org/the-parameter-section/c3d-groups-and-parameters/locked-parameters/"},{"type":"link","href":"/c3d.org/the-parameter-section/c3d-groups-and-parameters/parameter-arrays","label":"Parameter Arrays","docId":"the-parameter-section/c3d-groups-and-parameters/parameter-arrays","unlisted":false},{"type":"link","href":"/c3d.org/the-parameter-section/c3d-groups-and-parameters/parameter-format","label":"Parameter Format","docId":"the-parameter-section/c3d-groups-and-parameters/parameter-format","unlisted":false}],"href":"/c3d.org/the-parameter-section/c3d-groups-and-parameters/"},{"type":"link","href":"/c3d.org/the-parameter-section/parameter-header","label":"Parameter Header","docId":"the-parameter-section/parameter-header","unlisted":false}],"href":"/c3d.org/the-parameter-section/"}]},"docs":{"additional-parameters/additional-analog-parameters/analog-descriptions2":{"id":"additional-parameters/additional-analog-parameters/analog-descriptions2","title":"ANALOG:DESCRIPTIONS2","description":"This parameter exists to provide documentation about each additional analog channel defined by the ANALOG:LABELS2 parameter and will only be found in C3D files that contain more than 255 analog channels.  The array entries are read with reference to LABELS2 entries with the same array index.","sidebar":"tutorialSidebar"},"additional-parameters/additional-analog-parameters/analog-labels2":{"id":"additional-parameters/additional-analog-parameters/analog-labels2","title":"ANALOG:LABELS2","description":"This is an array of up to 255 additional ANALOG:LABELS entries that will only be seen in C3D files that contain more than 255 analog channels and extends support for an additional 255 additional analog channels.  C3D files that require even more analog channels may create a LABELS3 parameter.  All LABELS parameter characteristics must be identical, defined as CHAR strings with the same lengths.","sidebar":"tutorialSidebar"},"additional-parameters/additional-analog-parameters/analog-offset2":{"id":"additional-parameters/additional-analog-parameters/analog-offset2","title":"ANALOG:OFFSET2","description":"This is an array of up to 255 additional ANALOG:OFFSET entries, it will only be seen in C3D files that contain more than 255 analog channels, and extends support for an additional 255 additional analog channels.  An individual OFFSET parameter is required for every analog channel supported by the C3D file.","sidebar":"tutorialSidebar"},"additional-parameters/additional-analog-parameters/analog-scale2":{"id":"additional-parameters/additional-analog-parameters/analog-scale2","title":"ANALOG:SCALE2","description":"This is an array of up to 255 additional ANALOG:SCALE entries, it will only be seen in C3D files that contain more than 255 analog channels and extends support for an additional 255 additional analog channels.  An individual SCALE parameter is required for every analog channel supported by the C3D file.","sidebar":"tutorialSidebar"},"additional-parameters/additional-analog-parameters/analog-units2":{"id":"additional-parameters/additional-analog-parameters/analog-units2","title":"ANALOG:UNITS2","description":"This is an array of up to 255 additional ANALOG:UNITS entries, it will only be seen in C3D files that contain more than 255 analog channels and extends support for an additional 255 additional analog channels.  An individual UNITS parameter is required for every analog channel supported by the C3D file.","sidebar":"tutorialSidebar"},"additional-parameters/additional-analog-parameters/index":{"id":"additional-parameters/additional-analog-parameters/index","title":"Additional ANALOG parameters","description":"These additional parameters document the extension of the ANALOG group to support more than 255 \u201canalog channels\u201d, enabling the storage of digital data values in the same manner that the C3D file uses to store more than 255 3D points.  This method remains compatible with older applications which may be limited to only displaying and processing less than 255 analog channels but the extension to add more analog channels does not change the internal C3D format.  Therefore implementation is relatively easy for most applications working with the C3D file format and makes it easy to maintain compatibility with older C3D files.","sidebar":"tutorialSidebar"},"additional-parameters/additional-force-platform-parameters/force-platform-cal-matrix":{"id":"additional-parameters/additional-force-platform-parameters/force-platform-cal-matrix","title":"FORCE_PLATFORM:CAL_MATRIX","description":"A calibration matrix enables softwareSince the CALMATRIX parameter will be ignored, even if present, unless the force platform type is a supported TYPE, its inclusion in a C3D file does not automatically imply that it must be applied to the stored force data.  If the force data TYPE does not support the CALMATRIX then the force plate\u2019s data must be scaled using the ANALOG:SCALE factors as described in detail in the chapter entitled Calculating SCALE values for force plates.","sidebar":"tutorialSidebar"},"additional-parameters/additional-force-platform-parameters/index":{"id":"additional-parameters/additional-force-platform-parameters/index","title":"Additional FORCE_PLATFORM parameters","description":"The calibration matrix is the inverse matrix of the sensitivity matrix used to calculate the scaling factors.  Its presence in a C3D file is optional, allowing greater accuracy in the calculation of forces, powers and moments from the recorded analog data if the full calibration matrix for each force plate is stored within the C3D file and is available to any application that reads the raw analog force plate data from the C3D file.  A full matrix, which must contain all 36 unique crosstalk components, means that the file stores all the information needed to generate accurate force and moment data.","sidebar":"tutorialSidebar"},"additional-parameters/additional-point-parameters/index":{"id":"additional-parameters/additional-point-parameters/index","title":"Additional POINT parameters","description":"When C3D files store more than 255 3D points, the parameter storage limits for recording the POINTDESCRIPTIONS are exceeded, each indexed by an unsigned byte counter, these parameters can only store a maximum of 255 identifying strings.  When a C3D file contains more points, storage for additional identifications and descriptions is extended by creating a new pair of LABELS and DESCRIPTIONS parameters with a number indicating the order of the stored values e.g. LABELS2, LABELS3, DESCRIPTIONS2, DESCRIPTIONS3, etc.","sidebar":"tutorialSidebar"},"additional-parameters/additional-point-parameters/long-frames":{"id":"additional-parameters/additional-point-parameters/long-frames","title":"LONG_FRAMES","description":"The original C3D documentation described the POINTFRAMES as an unsigned integer, extending the maximum frame range to 65535 frames but when C3D files passed this limit, Vicon Motion Systems started storing the frame count as two complex TRIAL parameters, apparently storing the frame count as video fields; the POINT:LONG_FRAMES was independently created by C-Motion to store the total frame count as a single floating-point value.","sidebar":"tutorialSidebar"},"additional-parameters/additional-point-parameters/point-descriptions2":{"id":"additional-parameters/additional-point-parameters/point-descriptions2","title":"POINT:DESCRIPTIONS2","description":"This is an array of ASCII or UTF-8 encoded character strings that may be used to describe each LABELS2 value.  This parameter is synchronized with the POINTDESCRIPTIONS parameter.  This parameter describes the contents of a LABELSn parameter with the same array index to document the point location or function for anyone reading the C3D file.  Any modifications to the C3D file points, by adding or deleting a point, must maintain the descriptions stored in DESCRIPTIONS, DESCRIPTIONS2 etc., in synchronization with the identifiers stored in the LABELS parameters.","sidebar":"tutorialSidebar"},"additional-parameters/additional-point-parameters/point-labels2":{"id":"additional-parameters/additional-point-parameters/point-labels2","title":"POINT:LABELS2","description":"This new parameter is used to store additional point identifying labels beyond the 255 limit in the default POINT:LABELS group and expands the maximum number of labels to 511.  When LABELS2 is found in a C3D file then the LABELS parameter must always store 255 values.","sidebar":"tutorialSidebar"},"additional-parameters/index":{"id":"additional-parameters/index","title":"Additional Parameters","description":"The additional parameters and groups described here are not formally required to meet the C3D standard but may be required for compatibility in different situations.  They have been created by manufacturers to allow them to extend the original format to accommodate larger numbers of 3D frames in a C3D file, synchronize the 3D data with external film images, support more than 255 3D points, more than 18 events, and more than 255 analog channels.  All C3D applications should check for these parameters and be prepared to handle them appropriately but they are optional and may not exist.  These parameters have been added as technology advances and motion capture systems create larger C3D files with more points and analog channels so they may be required under specific circumstances.","sidebar":"tutorialSidebar"},"additional-parameters/the-event-context-group/event-context-colours":{"id":"additional-parameters/the-event-context-group/event-context-colours","title":"EVENT_CONTEXT:COLOURS","description":"Note the British English spelling of this item in contrast to the US English spellings used everywhere in the C3D format description.  It is a (3,EVENT_CONTEXT:USED) array of unsigned integers that store the colors used by each event type as (R,G,B) triplets with each value in the range 0 to 255.  Potentially this allows an application to highlight particular events in the C3D file with specific colors.","sidebar":"tutorialSidebar"},"additional-parameters/the-event-context-group/event-context-descriptions":{"id":"additional-parameters/the-event-context-group/event-context-descriptions","title":"EVENT_CONTEXT:DESCRIPTIONS","description":"This contains an array of EVENT_CONTEXT:USED descriptions (typically up to 32 characters long) that are associated with the corresponding labels e.g.  General events, Left side event, Right side event, Invalid event.  This parameter simply provides additional descriptive information for each of the LABELS.","sidebar":"tutorialSidebar"},"additional-parameters/the-event-context-group/event-context-icon-ids":{"id":"additional-parameters/the-event-context-group/event-context-icon-ids","title":"EVENT_CONTEXT:ICON_IDS","description":"This is an array of EVENTCONTEXT:USED unsigned integers that identify the icons that an application may associate with each context.  If this parameter is used then applications must provide the actual iconic representation.  The ICONID parameter can be thought of as a defining the event type or the context in which the event will be used.","sidebar":"tutorialSidebar"},"additional-parameters/the-event-context-group/event-context-labels":{"id":"additional-parameters/the-event-context-group/event-context-labels","title":"EVENT_CONTEXT:LABELS","description":"This is an array of EVENT_CONTEXT:USED user defined labels (normally 16 characters long) that provides the context label strings that may be used in the C3D file typically General, Left, Right, and Invalid.","sidebar":"tutorialSidebar"},"additional-parameters/the-event-context-group/event-context-used":{"id":"additional-parameters/the-event-context-group/event-context-used","title":"EVENT_CONTEXT:USED","description":"A single signed integer that stores the number of event contexts stored in the group.","sidebar":"tutorialSidebar"},"additional-parameters/the-event-context-group/index":{"id":"additional-parameters/the-event-context-group/index","title":"The EVENT_CONTEXT Group","description":"This group provides names and descriptions for the contexts of named events in the C3D file that are stored in the EVENT group.  The event context can be thought of as defining the class of event without limiting the user by defining the type of event \u2013 the typical event contexts are Left side event, Right side event, and General event but other contexts can easily be created.  This allows individual events to be created in the EVENT group and then analyzed within their context.  Thus, a Foot strike event can have a Left side event or Right side event context and can be organized and analyzed with other events with the same context.  Multiple event contexts are supported giving applications the ability to define custom event contexts.","sidebar":"tutorialSidebar"},"additional-parameters/the-event-group/event-contexts":{"id":"additional-parameters/the-event-group/event-contexts","title":"EVENT:CONTEXTS","description":"This is an array of user defined strings \u2013 typically sized as (EVENTLABELS parameter.  This enables a \u201cside\u201d to be assigned to bipedal events where the observer is interested in left versus right side data or could just as easily describe \u201cup\u201d versus \u201cdown\u201d events too.","sidebar":"tutorialSidebar"},"additional-parameters/the-event-group/event-descriptions":{"id":"additional-parameters/the-event-group/event-descriptions","title":"EVENT:DESCRIPTIONS","description":"This is an array of user defined strings \u2013 typically sized as (EVENT:USED,32) \u2013 that stores a description for each event.  This can be a long event definition (for example, \u201cThe moment any part of the foot first contacts the floor during a gait cycle\u201d) or a simple descriptive string e.g.  Heel Contact, Cyswllt sawdl, Kontakt pi\u0119ty, etc.","sidebar":"tutorialSidebar"},"additional-parameters/the-event-group/event-generic-flags":{"id":"additional-parameters/the-event-group/event-generic-flags","title":"EVENT:GENERIC_FLAGS","description":"This is an array of (EVENT:USED) flags associated with the corresponding labels, indicating whether the event is general purpose (value non-zero) or has specific purpose (value zero).  General-purpose events may have free-entry text labels and descriptions, whereas those of specialized events tend to be fixed.  The values used are defined by the application that creates and processes the data, their values are not described as part of the C3D file format because events are normally application and trial environment specific.","sidebar":"tutorialSidebar"},"additional-parameters/the-event-group/event-icon-ids":{"id":"additional-parameters/the-event-group/event-icon-ids","title":"EVENT:ICON_IDS","description":"An array of (EVENTDESCRIPTIONS parameters when the data is displayed by an application.  So an ICON_ID can be thought of as displaying an event type that may be specific to the application presenting the data to the user.  Since the values of this parameter have never been specified, applications must provide the actual icon representation themselves.","sidebar":"tutorialSidebar"},"additional-parameters/the-event-group/event-labels":{"id":"additional-parameters/the-event-group/event-labels","title":"EVENT:LABELS","description":"This is an array of user defined strings, one for each stored event that stores a LABELS entry associated with each stored event e.g. Foot Strike, Foot Off etc.  When used with the appropriate EVENT:CONTEXT value this can identify an event as Left Foot Strike or Right Foot Off etc.","sidebar":"tutorialSidebar"},"additional-parameters/the-event-group/event-subjects":{"id":"additional-parameters/the-event-group/event-subjects","title":"EVENT:SUBJECTS","description":"An array of (EVENT:USED) user define strings that serves to identify subject names associated with individual events.  This parameter supports situations where they may be several different subjects recorded at the same time.  Empty strings apply to the whole trial so, if present, this parameter will usually be empty if there was only a single subject recorded in the trial.","sidebar":"tutorialSidebar"},"additional-parameters/the-event-group/event-times":{"id":"additional-parameters/the-event-group/event-times","title":"EVENT:TIMES","description":"This array stores the time of each event from the start of the trial where the first 3D sample (frame 1) is time 0.0.  The time is recorded in an array (USED,2) as two floating-point numbers in the form of \u201cwhole minutes\u201d, \u201cseconds (and fractions of)\u201d.","sidebar":"tutorialSidebar"},"additional-parameters/the-event-group/event-used":{"id":"additional-parameters/the-event-group/event-used","title":"EVENT:USED","description":"The EVENT:USED parameter is a single signed integer that stores the total number of events that are recorded in the EVENTS group.  This is used as an index to many of the other arrays in this group to locate individual event information.","sidebar":"tutorialSidebar"},"additional-parameters/the-event-group/index":{"id":"additional-parameters/the-event-group/index","title":"The EVENT Group","description":"The EVENT group (and the associated EVENT_CONTEXT group) first appeared in C3D files created by Oxford Metrics in 2001 to work around the limit of a maximum of 18 simple events in the C3D file header.  The descriptions are based on a document provided by the manufacturer.  The existence of this group is optional, it is only described here as part of the C3D file format because it appears in many files but may be modified by users to support different event environments.","sidebar":"tutorialSidebar"},"additional-parameters/the-trial-group/index":{"id":"additional-parameters/the-trial-group/index","title":"The TRIAL Group","description":"This group is common in C3D files generated by Vicon Motion Systems and stores the C3D frame range using a method that works around the traditional limit when the POINT:FRAMES parameter is written as an unsigned 16-bit integer.  While this group is undocumented, the parameters described in this group may be used to support the synchronization of data within the C3D file with external video files containing odd and even fields of data.","sidebar":"tutorialSidebar"},"additional-parameters/the-trial-group/the-trial-frame-calculation":{"id":"additional-parameters/the-trial-group/the-trial-frame-calculation","title":"The TRIAL frame calculation","description":"Thus, when using the TRIAL group parameters to calculate the C3D file size, the number of frames in the C3D file is calculated using the 32-bit TRIAL group values, subtracting the results of the ACTUALSTARTFIELD from the ACTUALENDFIELD calculated values and adding 1:","sidebar":"tutorialSidebar"},"additional-parameters/the-trial-group/trial-actual-end-field":{"id":"additional-parameters/the-trial-group/trial-actual-end-field","title":"TRIAL:ACTUAL_END_FIELD","description":"The first frame number in the C3D file is stored in two unsigned 16-bit integer values to form a 32-bit value.  The first unsigned 16-bit integer is the least significant word while the second unsigned 16-bit integer is the most significant word therefore the first frame number is calculated as:","sidebar":"tutorialSidebar"},"additional-parameters/the-trial-group/trial-actual-start-field":{"id":"additional-parameters/the-trial-group/trial-actual-start-field","title":"TRIAL:ACTUAL_START_FIELD","description":"The first frame number in the C3D file is stored in two unsigned 16-bit integer values to form a 32-bit value.  The first unsigned 16-bit integer is the least significant word while the second unsigned 16-bit integer is the most significant word therefore the first frame number is calculated as:","sidebar":"tutorialSidebar"},"additional-parameters/the-trial-group/trial-camera-rate":{"id":"additional-parameters/the-trial-group/trial-camera-rate","title":"TRIAL:CAMERA_RATE","description":"The TRIAL group usually contains additional parameters which may be related to external video film synchronization applications.  These additional undocumented parameters have no significant function in the C3D file format but may be relevant when attempting to synchronize an external video source.  Video data recorded with a standard video camera format is often interlaced when created and recorded as odd and even fields of data, each frame of data record at a 60Hz frame rate may contain a pair of interlaced 30Hz fields.","sidebar":"tutorialSidebar"},"appendix/choosing-a-c3d-format/c3d-parameters/index":{"id":"appendix/choosing-a-c3d-format/c3d-parameters/index","title":"C3D Parameters","description":"The definition of C3D parameters is simple - the parameter section must contain all the information necessary to define the contents of the 3D and analog data section of the C3D file.  This requirement ensures that anyone opening and reading a C3D file has access to all of the information necessary to interpret and analyze the C3D file contents.  The exact parameter contents will vary depending on the data stored in the C3D file, if the file is to be correctly interpreted all the required C3D parameters, documented in this user guide, must exist in the C3D file.","sidebar":"tutorialSidebar"},"appendix/choosing-a-c3d-format/c3d-parameters/parameter-interpretation":{"id":"appendix/choosing-a-c3d-format/c3d-parameters/parameter-interpretation","title":"Parameter interpretation","description":"The C3D environment is very flexible because all data collection environments are different, the C3D parameters exist to try and allow users to identify and process the data, regardless of the environment that created it.  The parameter concept can result in collections of parameters that document the contents of each analog channel and the interpretation but it\u2019s common to see C3D files that only contain data with identical LABEL and DESCRIPTION parameters without any data specific information as a result of applications written to create and process C3D data by programmers without any clinical or biomechanics lab experience.","sidebar":"tutorialSidebar"},"appendix/choosing-a-c3d-format/index":{"id":"appendix/choosing-a-c3d-format/index","title":"Choosing a C3D format","description":"When writing a C3D application, programmers face the decision of choosing one of the defined binary C3D file formats, will the data be stored in DEC, Intel, or SGI/MIPS endian formats?  While the Intel format is common, if an application needs access to data created in different environments, then all three formats (DEC, Intel, and SGI/MIPS) need to be supported \u2013 this will always be transparent to the user as the file format can be automatically determined when the file is opened and the code to access and interpret the data storage format only has to be written once. Sample code that documents C3D file data access supporting all formats is available from the www.c3d.org web site.","sidebar":"tutorialSidebar"},"appendix/choosing-a-c3d-format/sample-rate-limitations":{"id":"appendix/choosing-a-c3d-format/sample-rate-limitations","title":"Sample Rate Limitations","description":"All C3D files support a single sample rate for POINT data and a single sample rate for ANALOG data.  The ANALOG sample rate is always either the same as the POINT rate or an integer multiple of the POINT rate.  While this may seem restrictive, it ensures that the ANALOG data is always stored in synchronization with the POINT data.  In addition, this restriction allows any application to easily calculate the exact location of any individual frame of data within the C3D file thus making data access simpler and faster and regardless of the length of the data collection, ensured that the analog samples can always be synchronized with the 3D data samples.","sidebar":"tutorialSidebar"},"appendix/index":{"id":"appendix/index","title":"Appendix","description":"This appendix is just discussions; it is not part of the formal C3D file definition.","sidebar":"tutorialSidebar"},"appendix/integers-and-bytes/index":{"id":"appendix/integers-and-bytes/index","title":"Integers and Bytes","description":"Some of the parameters in C3D files store data values using 16-bit integers, while various parameter header values and arrays use an 8-bit byte as an index.  In the original C3D specification all integers and bytes in the parameter section were one\'s complement signed integers with a range of \u201332767 to +32767, and all 8-bit integers were one\'s complement signed bytes with a range of \u2013127 to +127.  Thus, in the original C3D format description every integer and byte in a parameter could store both positive and negative values and arrays could potentially have both positive and negative indexes.","sidebar":"tutorialSidebar"},"appendix/integers-and-bytes/signed-numbers":{"id":"appendix/integers-and-bytes/signed-numbers","title":"Signed numbers","description":"The use of signed 16-bit integer and signed 8-bit byte numbers for parameter and data storage in the early days of C3D file creation was a consequence of using FORTRAN to create most of the early C3D applications.","sidebar":"tutorialSidebar"},"appendix/integers-and-bytes/unsigned-numbers":{"id":"appendix/integers-and-bytes/unsigned-numbers","title":"Unsigned numbers","description":"Many of the traditional C3D file storage limits have been eliminated by interpreting many of the stored integer values as unsigned integers instead of signed integers in situations where a negative value would not be possible.  The use of unsigned integers and unsigned bytes in the C3D file format since 2004 has effectively doubled the amount of parameter and data storage that is available within the C3D file as compared to the original specification.  This affects the interpretation of the C3D file data but does not change the content of the C3D file at a binary level so all older C3D files created prior to the interpretation change remain compatible and readable because the file format is unchanged at a binary level.","sidebar":"tutorialSidebar"},"appendix/the-c3d-frame-count/index":{"id":"appendix/the-c3d-frame-count/index","title":"The C3D frame count","description":"Potentially there are multiple parameters in a C3D file that may describe the frame count, a complex situation that exists because some manufacturers creating C3D files have extended the original C3D format without fully considering how their changes affect the C3D standard.","sidebar":"tutorialSidebar"},"appendix/the-c3d-frame-count/maintaining-c3d-frame-count-compatibility":{"id":"appendix/the-c3d-frame-count/maintaining-c3d-frame-count-compatibility","title":"Maintaining C3D frame count compatibility","description":"When a C3D file is created, some applications may expect that any C3D frame count greater than 65535 is stored in either the POINTACTUALSTARTFIELD and the TRIALFRAMES parameter using floating-point.","sidebar":"tutorialSidebar"},"appendix/the-c3d-frame-count/reading-the-frame-count":{"id":"appendix/the-c3d-frame-count/reading-the-frame-count","title":"Reading the frame count","description":"When a C3D file is opened, the number of frames stored in the file is normally read from the C3D parameter POINTFRAMES parameter was a signed integer, but it may also be stored as an unsigned integer, or a floating-point value.  So applications opening the C3D file must be written correctly and must determine the parameter type before reading the parameter.","sidebar":"tutorialSidebar"},"appendix/the-c3d-frame-count/updating-the-c3d-frame-count":{"id":"appendix/the-c3d-frame-count/updating-the-c3d-frame-count","title":"Updating the C3D frame count","description":"If a C3D file is edited and 3D data frames are deleted, resulting in reducing the frame count from more than 65535 frames to less than 65535 frames then, if it exists, the POINTFRAMES parameter. If the C3D file contained a TRIAL group then, depending on the location of the deletions from the C3D file, both the TRIALACTUALEND_FIELD parameters may need updating to return the new frame count for compatibility with applications that read the TRIAL parameters to determine the C3D frame count.","sidebar":"tutorialSidebar"},"appendix/the-c3d-frame-count/writing-the-c3d-frame-count":{"id":"appendix/the-c3d-frame-count/writing-the-c3d-frame-count","title":"Writing the C3D frame count","description":"When creating a new C3D file, or saving any changes to an existing C3D file that has been modified, the frame count may need to be stored using several different methods for compatibility with applications whose programmers independently created unique frame storage methods.","sidebar":"tutorialSidebar"},"appendix/troubleshooting-c3d-files/diagnosing-c3d-problems":{"id":"appendix/troubleshooting-c3d-files/diagnosing-c3d-problems","title":"Diagnosing C3D problems","description":"If you are having issues with C3D files then a quick solution may be to download Mokka and the MLSviewer, two free applications from the www.c3d.org web site, and use them to open your C3D file.  Mokka will normally display the C3D marker data and analog information in a visual 3D workspace on a Windows system, while the MLSviewer will display the C3D structure and data contents in a format that makes it easy to explore both the file contents and structure.  If both applications succeed in opening and displaying the C3D file with problems in other applications then you can examine the file in detail and may be able to determine the cause of the problem by comparing the contents of the problem file with the contents of any of the test suites available from the C3D web site or the sample files supplied with the two viewer applications.","sidebar":"tutorialSidebar"},"appendix/troubleshooting-c3d-files/index":{"id":"appendix/troubleshooting-c3d-files/index","title":"Troubleshooting C3D files","description":"Occasionally users experience problems reading C3D files, in general these problems are due to one or more issues:","sidebar":"tutorialSidebar"},"appendix/troubleshooting-c3d-files/repairing-c3d-files":{"id":"appendix/troubleshooting-c3d-files/repairing-c3d-files","title":"Repairing C3D files","description":"If you need to repair a C3D file then consider the commercial C3Deditor which can open any C3D file and repair many common faults as well as giving the user the ability to edit locked parameters and delete unwanted or corrupted data channels.","sidebar":"tutorialSidebar"},"application-parameters/index":{"id":"application-parameters/index","title":"Application Parameters","description":"It is common to find additional parameters in C3D files besides the basic parameters that describe the data contained within the file.  Additional C3D parameters do not exist in every file because they normally record values that are either associated with the data stored in the file (subject weight, leg length etc.,) or have been added by an application that has processed the data.  Many application parameters are often created by users or programmers to solve an issue and provide information needed in particular circumstances however the author may be working in unique environment fail to considered problems that may be created by their additions to the C3D file.","sidebar":"tutorialSidebar"},"application-parameters/the-analog-group/analog-gain":{"id":"application-parameters/the-analog-group/analog-gain","title":"ANALOG:GAIN","description":"The ANALOG","sidebar":"tutorialSidebar"},"application-parameters/the-analog-group/index":{"id":"application-parameters/the-analog-group/index","title":"The ANALOG Group","description":"","sidebar":"tutorialSidebar"},"application-parameters/the-analysis-group":{"id":"application-parameters/the-analysis-group","title":"The ANALYSIS Group","description":"The ANALYSIS group is a manufacturer and application specific group that typically appears in C3D files that contain clinical gait data and have been processed by a clinical application for medical analysis.  It can contain a wide range of records, storing various parameters related to the subject data in the file such as stride length, cadence, walking speed, step time etc.  The meaning of the parameters stored in this group may vary depending on the analysis performed and the application that performs the analysis.","sidebar":"tutorialSidebar"},"application-parameters/the-manufacturer-group/index":{"id":"application-parameters/the-manufacturer-group/index","title":"The MANUFACTURER Group","description":"The MANUFACTURER group is used to record information about the software or hardware used to create the C3D file.  This group is intended to provide information that can be used to identify the hardware or software that generated the C3D file to document the original creation of each C3D file.  The existence of this group provides information that may be useful when debugging individual user issues and can help applications and users determine the correct interpretation of any unique parameters (e.g. ANALYSIS group parameters) stored in the C3D file whose values and interpretation are specific to the source of the original data.","sidebar":"tutorialSidebar"},"application-parameters/the-manufacturer-group/manufacturer-company":{"id":"application-parameters/the-manufacturer-group/manufacturer-company","title":"MANUFACTURER:COMPANY","description":"The COMPANY parameter is intended to identify the name of the company, whose software was the original source of the C3D file, allowing anyone reading a new C3D file to identify the original manufacturer that created the C3D file.  This parameter should be locked when the C3D file is created and preserved by other software applications if they edit, modify, or rewrite the C3D file.","sidebar":"tutorialSidebar"},"application-parameters/the-manufacturer-group/manufacturer-edited":{"id":"application-parameters/the-manufacturer-group/manufacturer-edited","title":"MANUFACTURER:EDITED","description":"This optional parameter enables a record of changes made to the C3D file to be maintained, typically recording the name of the application editing the C3D file and the date and time of any changes made to the file contents.","sidebar":"tutorialSidebar"},"application-parameters/the-manufacturer-group/manufacturer-software":{"id":"application-parameters/the-manufacturer-group/manufacturer-software","title":"MANUFACTURER:SOFTWARE","description":"An ASCII or UTF-8 character string, the SOFTWARE parameter is intended to record the name of the software application that created the original C3D file.  If this parameter exists then it should be locked and preserved by other software applications that edit or modify the C3D file.","sidebar":"tutorialSidebar"},"application-parameters/the-manufacturer-group/manufacturer-version":{"id":"application-parameters/the-manufacturer-group/manufacturer-version","title":"MANUFACTURER:VERSION","description":"Originally described as an ASCII character string, the VERSION parameter is intended to identify the version of the software that created the C3D file.  Some manufacturers have redefined this as an array of integers that record the version identification, while other manufacturers store their software version as an ASCII string using a different parameter name MANUFACTURER:VERSION_LABEL.","sidebar":"tutorialSidebar"},"application-parameters/the-point-group/index":{"id":"application-parameters/the-point-group/index","title":"The POINT Group","description":"Although initially conceived as a group that provided information about the 3D data stored in the file, the POINT group also contains a number of parameters that may control the display and presentation of the data to the user.  Various manufacturers have added parameters to this group that allow applications to store processed data within the 3D data section so that C3D files may now contain the results of modeling calculations in addition to marker positional information.","sidebar":"tutorialSidebar"},"application-parameters/the-point-group/point-x-screen":{"id":"application-parameters/the-point-group/point-x-screen","title":"POINT:X_SCREEN","description":"This is a two-character, 7-bit ASCII string containing a sign together with a single character (+X, +Y, +Z, -X, -Y, -Z) that indicates which axis of the reference coordinate system will be displayed left-to-right across the screen.  This parameter provides information and is compatible with the C3D file format.","sidebar":"tutorialSidebar"},"application-parameters/the-point-group/point-y-screen":{"id":"application-parameters/the-point-group/point-y-screen","title":"POINT:Y_SCREEN","description":"Like the X_SCREEN above, this is a 7-bit ASCII string containing a sign together with a single character (+X, +Y, +Z, -X, -Y, -Z).  This is used by software applications to indicate which axis of the reference coordinate system should be displayed bottom-to-top up the screen when the application initially opens the file.","sidebar":"tutorialSidebar"},"application-parameters/the-seg-group/index":{"id":"application-parameters/the-seg-group/index","title":"The SEG Group","description":"The SEG parameter group is common in older C3D file to provide the user with information about the data processing used when the raw data points were tracked and processed.  It is also used by other 3D photogrammetry applications and contains application specific values. A full description of the parameters normally contained in this group is available in the original ADTECH Motion Analysis Software System (AMASS) reference manual.","sidebar":"tutorialSidebar"},"application-parameters/the-seg-group/seg-acc-factor":{"id":"application-parameters/the-seg-group/seg-acc-factor","title":"SEG:ACC_FACTOR","description":"A single floating-point value that sets the maximum average acceleration (in terms of POINT:UNITS seconds, per second) over five successive samples for photogrammetry software to start a new segment.  This generally has a nominal value for gait analysis of 50mm/sec/sec but this may be varied for other trajectory sources.","sidebar":"tutorialSidebar"},"application-parameters/the-seg-group/seg-data-limits":{"id":"application-parameters/the-seg-group/seg-data-limits","title":"SEG:DATA_LIMITS","description":"A 3 by 2 array of floating-point values that defines the upper and lower limits of the reconstruction volume (measured in POINT:UNITS) during the trajectory photogrammetry calculations.","sidebar":"tutorialSidebar"},"application-parameters/the-seg-group/seg-intersection-limit":{"id":"application-parameters/the-seg-group/seg-intersection-limit","title":"SEG:INTERSECTION_LIMIT","description":"This is a single floating-point value that sets the limit for the intersection of photogrammetric rays to reconstruct a 3D point.  Its nominal value, in terms of POINT:UNITS is 7mm or less.","sidebar":"tutorialSidebar"},"application-parameters/the-seg-group/seg-marker-diameter":{"id":"application-parameters/the-seg-group/seg-marker-diameter","title":"SEG:MARKER_DIAMETER","description":"A floating-point value that contains the diameter of the markers, or largest marker used, in the collection of 3D data.  This parameter is measured using the units recorded in the POINT:UNITS parameter, which is the same unit as used in the reference coordinate system.","sidebar":"tutorialSidebar"},"application-parameters/the-seg-group/seg-noise-factor":{"id":"application-parameters/the-seg-group/seg-noise-factor","title":"SEG:NOISE_FACTOR","description":"A single floating-point value that sets the maximum deviation from constant acceleration (in terms of POINT:UNITS) over five successive points for photogrammetry applications to start new trajectory segment.  The nominal value for gait analysis is 10mm.","sidebar":"tutorialSidebar"},"application-parameters/the-seg-group/seg-residual-error-factor":{"id":"application-parameters/the-seg-group/seg-residual-error-factor","title":"SEG:RESIDUAL_ERROR_FACTOR","description":"The SEG:RESIDUALERROR FACTOR parameter is a single floating-point value that controls the inclusion of rays during marker reconstruction.  It has a nominal value of 2.0 to 3.0 for most gait analysis applications.","sidebar":"tutorialSidebar"},"application-parameters/the-subjects-group/data-encryption":{"id":"application-parameters/the-subjects-group/data-encryption","title":"Data encryption","description":"In the United States, the Health Insurance Portability and Accountability Act of 1996 (HIPPA) created a set of national standards for the protection of certain classes of personal information that might be stored in the SUBJECTS group and might uniquely identify the subject.  Many counties may have similar requirements but the presence of this group does not indicate that any policies have been violated as parameters such as HEIGHT, WEIGHT, GENDER etc. are often required for data processing and analysis without uniquely identifying the subject or source of the data stored in the C3D file.  When C3D files containing this group are shared, privacy requirements may be met by either removing or encrypting the personal identification parameters while retaining parameters that are needed to research and analysis such as MARKER_SETS, WEIGHT, HEIGHT, GENDER etc.","sidebar":"tutorialSidebar"},"application-parameters/the-subjects-group/index":{"id":"application-parameters/the-subjects-group/index","title":"The SUBJECTS Group","description":"The SUBJECTS group is normally an application specific group that may contain parameters that allow applications processing the 3D points to associate specific 3D points with multiple individuals with the data collection trial, recording the subject details and the names of specific marker sets and analysis details used.  Users must contact the manufacturer of the application that creates this group to obtain details and descriptions of the function of these parameters.","sidebar":"tutorialSidebar"},"glossary-of-terms":{"id":"glossary-of-terms","title":"Glossary of Terms","description":"This glossary contains definitions of terms used in the C3D documentation.  In some cases, terms such as record, blocks, and section, are used in ways that may appear unconventional to many users with a traditional programming background.  The use of these terms in this manual is an attempt to describe the C3D format in a coherent fashion as a vehicle for the accurate storage of universally accessible data in the 3D biomechanics motion capture environment.","sidebar":"tutorialSidebar"},"introduction/a-c3d-synopsis/a-brief-history":{"id":"introduction/a-c3d-synopsis/a-brief-history","title":"A Brief History","description":"Before the C3D format was created, each motion capture system vendor created data files in custom formats that contained the data collected.  Systems created a unique collection of data files that their users had to figure out how to process.  Each motion capture manufacturer understood how their systems worked but had virtually no experience of the clinical and research data environments in which the systems were used.  This made life difficult for individual laboratories and very hard for researchers in multiple data collection environments to share their data with researchers using different systems while working on the same research area, grant, or project.  Originally the only way to share and compare data clinically was to print out the results on paper.  The C3D format was created in the National Institute of Health in Bethesda, Maryland under the direction of Steven Stanhope, to rectify this situation by creating a file format that put the preservation, compatibility, and integrity of every data collection, with the ability to share and compare data, at the top of the end-users concerns.","sidebar":"tutorialSidebar"},"introduction/a-c3d-synopsis/index":{"id":"introduction/a-c3d-synopsis/index","title":"A C3D Synopsis","description":"The C3D (Coordinate 3D) format was designed to minimize the storage requirements and the number of files required to store data and associated parameters in the gait analysis environment, together with these features:","sidebar":"tutorialSidebar"},"introduction/index":{"id":"introduction/index","title":"Introduction","description":"The C3D (Coordinate 3D) file format was created for the AMASS photogrammetry software in the Biomechanics Laboratory at the National Institutes of Health (NIH) in Bethesda Maryland.  The AMASS suite, which generated the first C3D files, was developed by ADTECH under the direction of Steven Stanhope at the NIH, with an aim to develop a software format to replace the relatively inefficient biomechanics photogrammetry software systems in the early days of computerized motion capture.  AMASS was the first software application to automate the identification of 3D motion capture trajectories \u2013 a task previously considered impossible by motion capture system vendors whose manual marker tracking applications could take users almost an hour to complete tasks that the AMASS software performed in a minute.","sidebar":"tutorialSidebar"},"introduction/overview/c3d-file-description":{"id":"introduction/overview/c3d-file-description","title":"C3D File Description","description":"All C3D files normally contain three sections of information (header, parameters, and data).  The C3D file header section is always the first 512-byte block in the file. C3D files should be seen as consisting of blocks that are 512 bytes long (256 16-bit words) and, while all sections within a C3D file must start on a 512 byte block boundary, the information stored within the parameter and data sections can cross individual block boundaries.","sidebar":"tutorialSidebar"},"introduction/overview/data-section/3d-point-data-format":{"id":"introduction/overview/data-section/3d-point-data-format","title":"3D Point data format","description":"The structure used to store 3D coordinate and analog data is defined by the second byte in the C3D file header.  The default value of the second header byte is 0x50h, an ASCII \u201cP\u201d character which defines the data section contents as frames of 3D Points, stored as XYZ co-ordinates with a residual and camera mask, together with multiple synchronized analog data samples.","sidebar":"tutorialSidebar"},"introduction/overview/data-section/alternative-data-formats":{"id":"introduction/overview/data-section/alternative-data-formats","title":"Alternative Data Formats","description":"The 3D Point format, storing locations as XYZ coordinates with interleaved analog data samples, is the default data section format and is specified by the C3D file header byte #2 which is 0x50h, the ASCII \u201cP\u201d character.  The C3D format was designed to be flexible so the option to create new data section storage formats exists but is very complex.","sidebar":"tutorialSidebar"},"introduction/overview/data-section/data-storage":{"id":"introduction/overview/data-section/data-storage","title":"Data Storage","description":"The C3D format was originally designed to store the data section values as 16-bit signed integers with an associated floating-point scale factor.  All 3D samples use a single floating-point scaling factor (POINT:SCALE) that translates each active 3D measurements to real-world millimeter measurements, while all analog samples each have an individual scaling values and can be stored in any units value as documented by their individual ANALOG parameters.","sidebar":"tutorialSidebar"},"introduction/overview/data-section/index":{"id":"introduction/overview/data-section/index","title":"Data Section","description":"The C3D file data section is located in the file after the parameter section.  The C3D format specification requires that the data section starts on the 512-byte block boundary that is indicated by the POINT:DATA_START parameter which is stored as a 16-bit unsigned integer in the C3D parameter section.  A copy of this value is also stored in the 12-word C3D file header record.","sidebar":"tutorialSidebar"},"introduction/overview/header-section":{"id":"introduction/overview/header-section","title":"Header Section","description":"The first 512 byte block of a C3D file is the header section, starting with a twelve word header record that defines the basic storage format of the C3D file, allowing applications to determine the file structure, locate, read, and interpret the parameters and data stored in the file.  The first header byte points to the parameter section in the file while the second header byte defines the data section storage.  The parameter pointer allows applications to locate the parameter section and determine the endian format used, while the data section storage format is defined by the second byte which is normally 0x50h, defining the 3D Point storage method.  The header record contains a number of items that define the internal data structure of the C3D file.","sidebar":"tutorialSidebar"},"introduction/overview/index":{"id":"introduction/overview/index","title":"Overview","description":"C3D files that conform to the specification normally contain accurate synchronized 3D Point and numeric sensor data that can be read and analyzed by C3D compliant applications.  It is important to realize that while software applications may claim to be C3D compatible but there is no official organization that grants the right to use the term C3D.  As a result hardware and application vendors may occasionally claim to be C3D compatible even though the C3D files that they create may contain data or formatting issues that can cause problems.","sidebar":"tutorialSidebar"},"introduction/overview/parameter-section":{"id":"introduction/overview/parameter-section","title":"Parameter Section","description":"The C3D file parameter section header records the endian format used by the C3D file.  As a result, the parameter section header must be read when a C3D file is first opened because the endian format affects the interpretation of all 16-bit integer and 32-bit floating-point values stored in the file.  Once the endian format is known, all the information stored in the C3D file is readable.  The items stored in the parameter section normally document the contents of the data section, allowing applications to read, interpret, and analyze the stored data.","sidebar":"tutorialSidebar"},"introduction/specification":{"id":"introduction/specification","title":"Specification","description":"A file specification defines the limitations that are inherent in the format.  The C3D format was designed to store 3D locations together with analog data in a single file format that could be accessed by anyone to process and analyze the data.  When the second byte in the header record is 0x50h (specifying the 3D Point data format) the file records 3D location information as XYZ coordinates (referenced to a common origin) together with information about the quality of the measurements (residuals) and multiple analog data samples stored with each frame of 3D data.","sidebar":"tutorialSidebar"},"introduction/the-c3d-file-structure/index":{"id":"introduction/the-c3d-file-structure/index","title":"The C3D File Structure","description":"The standard C3D file format stores 3D marker coordinates and analog data samples for any measurement trial, together with the parameters that describe the data, in one file.  This means that a single 3D motion capture data trial normally includes all the information required to process the data without the need for additional notes and subject documentation attached as separate files, eliminating the risk that some vital information about the data might become separated from the data.","sidebar":"tutorialSidebar"},"introduction/the-c3d-file-structure/parameter-information":{"id":"introduction/the-c3d-file-structure/parameter-information","title":"Parameter Information","description":"In addition to physical measurement samples, a C3D file can contain information about the data, such as measurement units, data labels, and data description parameters, stored in the parameter section of the file.  This allows users to locate data by its name, for example an analog channel can be identified by the ANALOG:LABEL (e.g. LFS, described as Left Foot Switch) regardless of the actual analog channel used to store the data.","sidebar":"tutorialSidebar"},"introduction/the-c3d-file-structure/physical-measurements/data-synchronization":{"id":"introduction/the-c3d-file-structure/physical-measurements/data-synchronization","title":"Data Synchronization","description":"C3D files can contain both analog data and 3D data, stored as values frame by frame with multiple analog values stored with each 3D sample. Storing the 3D location and analog samples in a single file with a defined format makes it is easy for users to retrieve the data with confidence that the data from multiple sources, e.g. cameras, video equipment, electromyography, accelerometers, foot-switches, and force plates etc., is temporally related sample by sample.","sidebar":"tutorialSidebar"},"introduction/the-c3d-file-structure/physical-measurements/index":{"id":"introduction/the-c3d-file-structure/physical-measurements/index","title":"Physical Measurements","description":"The C3D specification expects all physical measurements to be one of two types, physical location information (for example, 3D locations or coordinates) referenced to a common origin, and numeric data (digital analog information).","sidebar":"tutorialSidebar"},"preface":{"id":"preface","title":"Preface","description":"In May 2002, Andrew Dainis wrote the following brief summary of the history of the C3D format for inclusion in this user guide \u2026","sidebar":"tutorialSidebar"},"required-parameters/index":{"id":"required-parameters/index","title":"Required Parameters","description":"A basic set of parameters must exist in every C3D file.  Applications that read C3D files will need to find these parameters whenever a C3D file is opened to interpret the data section.  The parameters described in this section must exist in all C3D files to maintain C3D file compatibility because they describe the contents of the C3D file data.  All parameter data values are stored in a common format and can be examined and modified by applications.","sidebar":"tutorialSidebar"},"required-parameters/the-analog-group/analog-bits":{"id":"required-parameters/the-analog-group/analog-bits","title":"ANALOG:BITS","description":"This parameter was added to the C3D format several years after its creation and may not be found in older C3D files.  The ANALOG:BITS parameter is a single integer value that describes the analog data sample resolution and will normally contain one of three values, 12, 14 or 16.  As this value directly affects the interpretation of the analog data it should normally be \u201clocked\u201d.  If the parameter does not exist then it is usually safe to assume that its value is 12.  Alternatively, its value can be measured by reading every analog sample contained in the 3D/analog data section and determining the effective resolution from the highest analog data value found.","sidebar":"tutorialSidebar"},"required-parameters/the-analog-group/analog-descriptions":{"id":"required-parameters/the-analog-group/analog-descriptions","title":"ANALOG:DESCRIPTIONS","description":"The ANALOGLABELS parameter.  There should always be a one to one relationship between the number of LABELS and the number of DESCRIPTIONS although users occasionally create files with different numbers of LABELS and DESCRIPTIONS parameters.","sidebar":"tutorialSidebar"},"required-parameters/the-analog-group/analog-format":{"id":"required-parameters/the-analog-group/analog-format","title":"ANALOG:FORMAT","description":"The ANALOG:FORMAT parameter was first described about 2005, as a result software applications created prior to that time will not read it.  The parameter was invented originally because a manufacturer started storing analog data as unsigned values when floating-point became the default C3D file format.  The parameter describes the analog data storage format, not the C3D file format.  The original C3D file format defaulted to storing all data and parameters as one\u2019s complement, signed 16-bit integer values, with a range of -32767 to +32767.  This is described as a signed C3D file, which evolved to be called an unsigned C3D file that treats the parameter integers as unsigned values, extending the maximum positive value in many areas where a negative value is not possible (e.g. point and analog channel counts).  So even if the C3D format is floating-point, the C3D parameter integers will be read as unsigned integers resulting in the C3D file being described as unsigned.","sidebar":"tutorialSidebar"},"required-parameters/the-analog-group/analog-gen-scale":{"id":"required-parameters/the-analog-group/analog-gen-scale","title":"ANALOG:GEN_SCALE","description":"The C3D file format was designed to accurately store 3D data, together with analog sampled data, and provide the user with as much information as possible about each of the signals recorded in the file.  The C3D format was designed to store the analog samples recorded directly from the ADC subsystem and consequently supports one universal scale factor that describes the ADC system and individual scale factors for each analog channel that translates the sampled analog data into physical world values, e.g. typically volts, degrees, newtons, etc.","sidebar":"tutorialSidebar"},"required-parameters/the-analog-group/analog-labels":{"id":"required-parameters/the-analog-group/analog-labels","title":"ANALOG:LABELS","description":"The C3D file format defines the ANALOG:LABELS parameter as a character data array that consists of a unique four-character ASCII (A-Z, 0-9) string for each analog channel contained within the C3D file.  This is referred to as the analog channel label and is used to reference each channel of data contained within the C3D file data section in the order in which the channels are stored.  Labels are typically 4-16 characters long (4 upper case characters is the default).","sidebar":"tutorialSidebar"},"required-parameters/the-analog-group/analog-offset":{"id":"required-parameters/the-analog-group/analog-offset","title":"ANALOG:OFFSET","description":"The ANALOGSCALE scaling factors are applied.  By default a signed integer, the ANALOGFORMAT parameter is \u201cUNSIGNED\u201d then the ANALOG:OFFSET parameter should be interpreted as unsigned integer numbers in the range of 0 to +65535.","sidebar":"tutorialSidebar"},"required-parameters/the-analog-group/analog-rate":{"id":"required-parameters/the-analog-group/analog-rate","title":"ANALOG:RATE","description":"The ANALOGRATE value.  Thus, an ANALOGRATE of 60.00 has 10 analog samples per 3D sample (60 x 10).","sidebar":"tutorialSidebar"},"required-parameters/the-analog-group/analog-scale/calculating-scale-values-for-emg-systems":{"id":"required-parameters/the-analog-group/analog-scale/calculating-scale-values-for-emg-systems","title":"Calculating SCALE values for EMG systems","description":"It is recommended that any device that has a user adjustable gain setting, as is typical with many EMG systems, should be scaled to deliver a signal in scaled in the output voltage range of the device.  This means that the C3D scale calculation, delivering a signal in terms of the device output voltage, does not have to be adjusted whenever the user changes the connected device gain.","sidebar":"tutorialSidebar"},"required-parameters/the-analog-group/analog-scale/calculating-scale-values-for-force-plates":{"id":"required-parameters/the-analog-group/analog-scale/calculating-scale-values-for-force-plates","title":"Calculating SCALE values for force plates","description":"The method used for calculating the SCALE values for force plate channels depends on the force plate type as recorded by the parameter FORCE_PLATFORM:TYPE.  The C3D parameters described here accommodate two types of force plate, eight-channel piezo-electric force plates (e.g.  Kistler), and six-channel strain gauge force plates (e.g.  AMTI, Bertec and Kyowa-Dengyo).","sidebar":"tutorialSidebar"},"required-parameters/the-analog-group/analog-scale/calculating-scale-values-for-load-cells":{"id":"required-parameters/the-analog-group/analog-scale/calculating-scale-values-for-load-cells","title":"Calculating SCALE values for load cells","description":"Many sensors produce an output in terms of units other than volts \u2013 in this case, an additional scaling factor must be applied to the scale calculation.  The scaling factor can be calculated once some basic information about the sensor is available.","sidebar":"tutorialSidebar"},"required-parameters/the-analog-group/analog-scale/index":{"id":"required-parameters/the-analog-group/analog-scale/index","title":"ANALOG:SCALE","description":"The individual ANALOGGEN_SCALE value and the individual ANALOG:SCALE value to 1.00 effectively removes the scaling factors from the C3D file and is normal when the recorded analog data values are pre-scaled and stored in a floating-point formatted file.  Note that this will prevent the analog data being preserved if the C3D file format is ever changed from floating-point file to an integer formatted file without rescaling all of the data.","sidebar":"tutorialSidebar"},"required-parameters/the-analog-group/analog-units":{"id":"required-parameters/the-analog-group/analog-units","title":"ANALOG:UNITS","description":"The ANALOGUNITS entry for a total of ANALOG:USED channels.","sidebar":"tutorialSidebar"},"required-parameters/the-analog-group/analog-used":{"id":"required-parameters/the-analog-group/analog-used","title":"ANALOG:USED","description":"The ANALOGUSED is used to compute the analog data frame rate from the total number of analog data words collected during each 3D frame.  The total number of analog samples stored per 3D frame must be an integer multiple of ANALOGUSED parameter is not stored in the C3D file header but can be calculated from two values that are stored in the C3D file header.  The ANALOG:USED parameter value is equal to C3D header word 3 divided by C3D header Word 10.","sidebar":"tutorialSidebar"},"required-parameters/the-analog-group/index":{"id":"required-parameters/the-analog-group/index","title":"The ANALOG group","description":"The ANALOG parameters group stores information about the analog data recorded within a C3D file.  As a result, the parameter ANALOG:USED should be stored in all C3D files even if the file does not contain any analog data.  C3D files that do not contain analog data should set the value of the USED parameter to zero.","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/force-platform-channel":{"id":"required-parameters/the-force-platform-group/force-platform-channel","title":"FORCE_PLATFORM:CHANNEL","description":"The FORCE_PLATFORM:CHANNEL parameter is an array of signed integer data values that record which analog channels contain specific force platform data.  The force platform outputs may be connected to any convenient analog input channels in any order that is convenient to the user, provided that the assignment of force platform signals to analog channels is correctly specified in this parameter.","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/force-platform-corners":{"id":"required-parameters/the-force-platform-group/force-platform-corners","title":"FORCE_PLATFORM:CORNERS","description":"The FORCE_PLATFORMUNITS.  This is used by any graphics application to draw the force platforms, force vectors, and center of pressure information in the correct locations relative to the 3D point data.","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/force-platform-origin/index":{"id":"required-parameters/the-force-platform-group/force-platform-origin/index","title":"FORCE_PLATFORM:ORIGIN","description":"The FORCE_PLATFORM:ORIGIN parameter is an array (3,USED) of floating-point values whose interpretation depends on the type of force plate used (as set by the TYPE parameter).  You should be able to find all the information that you need to calculate the correct ORIGIN values in the appropriate force plate manual supplied by the force plate manufacturer.","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/force-platform-origin/type-1":{"id":"required-parameters/the-force-platform-group/force-platform-origin/type-1","title":"TYPE-1","description":"For a TYPE-1 force platform only the third component is used, while any values stored in ORIGIN(1,) and ORIGIN(2,) are ignored.  ORIGIN(3,) must contain the displacement from the force plate coordinate system origin to the working surface of the force platform.  Normally the force plate coordinate system origin is below the surface of the platform and the coordinate system z-axis is directed downwards, so that the sign of the distance entered in ORIGIN(3,) will be negative.","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/force-platform-origin/type-2":{"id":"required-parameters/the-force-platform-group/force-platform-origin/type-2","title":"TYPE-2","description":"For a TYPE-2 force platform, the ORIGIN parameter defines a vector pointing from the origin of the force plate coordinate system (the point where an application of Fx, Fy, or Fz will produce zero moment signals) to the point at the geometric center of the physical force platform working surface.  The vector described by the ORIGIN parameter must be expressed in the force platform coordinate system and locates the center of the working surface of the force plate within the force plate coordinate system.  This means that when the force plate is mounted in the floor, the Z component of this vector will be negative when the force plate origin lies below the physical surface of the force plate.","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/force-platform-origin/type-3":{"id":"required-parameters/the-force-platform-group/force-platform-origin/type-3","title":"TYPE-3","description":"For a TYPE-3 force platform, these values record the sensor offsets.  ORIGIN(1,) must contain the distance between the transducer axes and the force platform y-axis.  ORIGIN(2,) must contain the distance between transducer axes and the force platform x-axis.  ORIGIN(3,) should contain the distance between the force plate origin and the surface of the force platform.","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/force-platform-origin/type-4":{"id":"required-parameters/the-force-platform-group/force-platform-origin/type-4","title":"TYPE-4","description":"A TYPE-4 force platform stores the FORCE_PLATFORM:ORIGIN parameter in exactly the same way as a Type-2 force platform.  The ORIGIN parameter must hold the components of the vector pointing from the origin of the FP coordinate system to the point at the geometric center of the working surface of the force platform.  This vector is always expressed in the force platform coordinate system.","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/force-platform-type/index":{"id":"required-parameters/the-force-platform-group/force-platform-type/index","title":"FORCE_PLATFORM:TYPE","description":"The FORCEPLATFORMUSED parameter.  Initially, the C3D specification supported three force platform types (1-3), with the Type-4 platform added in the early 90\u2019s to support the inclusion of the full force plate calibration matrix.  Over the years since, various manufacturers have occasionally created additional force platform descriptions to define specific force data collection environments but these are not commonly seen.","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/force-platform-type/type-1":{"id":"required-parameters/the-force-platform-group/force-platform-type/type-1","title":"TYPE-1","description":"The force platform outputs FX, FY, and FX, are recorded in the first three channels, PX, PY (the locations of the center of pressure) in the next two channels and the free moment about the Z-axis (MZ) to the sixth channel.  The recommended parameter ANALOGDESCRIPTIONS are shown below:","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/force-platform-type/type-2":{"id":"required-parameters/the-force-platform-group/force-platform-type/type-2","title":"TYPE-2","description":"The force platform outputs, FX, FY, and FZ go to the first three channels, and the moments MX, MY, MZ in order to the next three channels, an arrangement typical for many AMTI and Bertec force plates. The recommended ANALOGDESCRIPTIONS are shown below; when multiple force plates are used, identify each plate with a number ensures that each ANALOGLABEL and DESCRIPTIONS parameter takes very little effort when compared to the amount of time that can be spent attempting to identify individual force plate configuration and scaling issues at any time in the future.  It is much easier to look at an analog channel identified as 5MY than a channel labeled A047.","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/force-platform-type/type-3":{"id":"required-parameters/the-force-platform-group/force-platform-type/type-3","title":"TYPE-3","description":"The force platform has eight analog outputs, which are combinations of the X, Y, and Z forces measured at each of the corners of the force platform, an arrangement typical of Kistler force plates.","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/force-platform-type/type-4":{"id":"required-parameters/the-force-platform-group/force-platform-type/type-4","title":"TYPE-4","description":"This force platform is the same as a TYPE-2 force platform except that a full calibration matrix is being provided via the CAL_MATRIX parameter which includes full crosstalk scaling.  For a TYPE-4 force plate the individual channel SCALE parameters should convert the analog data to volts only because the calibration matrix is applied in an additional step to convert volts to force and moment units. Do not use a TYPE-4 force plate type unless the force plate manufacturer provides a complete crosstalk correction matrix with scaling values for all matrix entries.  If the supplied matrix only contains the main diagonal elements then define the force plate as a TYPE-2 and store the individual scale values for the analog channels.","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/force-platform-used":{"id":"required-parameters/the-force-platform-group/force-platform-used","title":"FORCE_PLATFORM:USED","description":"The FORCEPLATFORM:USED parameter is normally a single unsigned integer value that stores the number of force platforms for which analog data and parameters exist in the C3D file.  When stored as an integer this may contain any value between 0 and 65535 although in practice the C3D format limits the size of the arrays describing the FORCEPLATFORM group parameters to 255 so effectively the default C3D file format could support 255 force plates.","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/force-platform-zero":{"id":"required-parameters/the-force-platform-group/force-platform-zero","title":"FORCE_PLATFORM:ZERO","description":"The FORCE_PLATFORM:ZERO parameter is an array that normally contains two non-zero integer values.  These specify the range of 3D data frame numbers that may be used to provide a baseline for the force platform measurements.  The default array values are is 1,10 although some applications may specify a range of 0,10 which should be interpreted as a range of 1 to 10 since the C3D file does not have a 3D frame number 0, the first frame in a C3D file is normally frame 1.","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/index":{"id":"required-parameters/the-force-platform-group/index","title":"The FORCE_PLATFORM group","description":"The FORCE_PLATFORM group is used to store information about the type, location, orientation, and implementation of the force plates within the 3D data collection environment.  Force plates are used to measure applied forces and moments \u2013 typically the ground reaction forces and moments produced by human gait although other applications exist, for example running, rock climbing, pole vaulting, cutting maneuvers, and other agility exercises that generate unique forces and moments.","sidebar":"tutorialSidebar"},"required-parameters/the-force-platform-group/specifying-force-platform-parameters":{"id":"required-parameters/the-force-platform-group/specifying-force-platform-parameters","title":"Specifying Force Platform Parameters","description":"Force platforms may be mounted in any orientation with respect to the 3D reference coordinate system. The problem of measuring the location of the force platforms in the reference coordinate system is easily overcome by placing a marker on each corner of each force plate and then measuring the locations using the calibrated 3D system, taking the height of the centers of the markers above the force plate surfaces into account to record the correct surface z-coordinates within the 3D environment. The 3D coordinates of each force plate in the 3D environment must be stored in the CORNERS parameters in the correct order to document both the location of the force plate and its orientation within the 3D environment.","sidebar":"tutorialSidebar"},"required-parameters/the-point-group/index":{"id":"required-parameters/the-point-group/index","title":"The POINT group","description":"The POINT parameters group provides information about the 3D data contained within a C3D file as well as some basic information about the data environment.  As a result, the POINT parameters POINTFRAMES, and POINTDATASTART parameter must exist because it is needed to provide a pointer to the start of the 3D point and analog storage within the file.  The POINT:USED parameter is required as it is used to determine the number of 3D points recorded in the data area.  If it is set to zero then it indicates that the 3D point and analog storage area does not contain any 3D point data and may only contain analog data values.","sidebar":"tutorialSidebar"},"required-parameters/the-point-group/point-data-start":{"id":"required-parameters/the-point-group/point-data-start","title":"POINT:DATA_START","description":"The POINT:DATA_START parameter is an unsigned 16-bit integer value used as a pointer to the first block of the 3D/analog data section within the C3D file and must always be used to determine location of the data section.  A C3D file block is always 512 bytes long (256 sixteen-bit words).  The first block in the C3D file is block number one and contains data structures that document the contents of the C3D file. Although located in the POINT group, this parameter is must exist even when the C3D file only contains analog data, as analog data is stored in the 3D data section.","sidebar":"tutorialSidebar"},"required-parameters/the-point-group/point-descriptions":{"id":"required-parameters/the-point-group/point-descriptions","title":"POINT:DESCRIPTIONS","description":"The POINTLABELS parameter.  There should always be a one to one relationship between the number of LABELS and the number of DESCRIPTIONS although users occasionally create files with different numbers of LABELS and DESCRIPTIONS parameters.","sidebar":"tutorialSidebar"},"required-parameters/the-point-group/point-frames":{"id":"required-parameters/the-point-group/point-frames","title":"POINT:FRAMES","description":"The POINT:FRAMES parameter is single value that stores the number of 3D data frames that are recorded in the C3D file.  Note that when the 3D data has been derived from a video based system this value does not necessarily correspond to the number of video frames in the recording that was used to create the C3D file.","sidebar":"tutorialSidebar"},"required-parameters/the-point-group/point-labels":{"id":"required-parameters/the-point-group/point-labels","title":"POINT:LABELS","description":"The original C3D file format defined the POINT:LABELS parameter as a character data array that consisted of one unique four-character ASCII value for each 3D data point contained within the C3D file.  By convention, the LABELS array values are usually four characters of upper-case ASCII text (A-Z, underscore, and 0-9) although longer labels and UTF-8 encoding are permitted.  Each label (LASI, RASI, LTOE etc.) is referred to as the point label and is used to provide a unique reference each 3D point contained within the C3D file data section.  This allows software applications to identify and process data based on the unique label identification e.g. RASI, LASI, and SACR defining the pelvis \u2013 Right ASIS marker, Left ASIS marker, and Sacrum marker.","sidebar":"tutorialSidebar"},"required-parameters/the-point-group/point-rate":{"id":"required-parameters/the-point-group/point-rate","title":"POINT:RATE","description":"The POINTRATE value will be 15 (accurately 14.985 for NTSC video data).","sidebar":"tutorialSidebar"},"required-parameters/the-point-group/point-scale":{"id":"required-parameters/the-point-group/point-scale","title":"POINT:SCALE","description":"The POINTUNITS parameter.  A positive SCALE factor indicates that the 3D data is stored as signed 16-bit integer values, while a negative SCALE factor indicates that the C3D file contains 3D points that have been pre-scaled and stored as floating-point values.","sidebar":"tutorialSidebar"},"required-parameters/the-point-group/point-units":{"id":"required-parameters/the-point-group/point-units","title":"POINT:UNITS","description":"The POINTUNITS parameter is stored as 4 ASCII characters, UTF-8 encoding is not permitted to guarantee that the value can be read by all C3D applications.","sidebar":"tutorialSidebar"},"required-parameters/the-point-group/point-used":{"id":"required-parameters/the-point-group/point-used","title":"POINT:USED","description":"The POINTUSED must be ten or greater, and every 3D frame will have space for POINTLABELS and POINT:DESCRIPTIONS parameters.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/analog-data-section/analog-data-floating-point-format/index":{"id":"the-3d-point-data-section/analog-data-section/analog-data-floating-point-format/index","title":"Analog Data - Floating-point format","description":"When storing analog data using floating-point format, the analog information is stored as a floating-point value.  This should usually be the (12 to 16 bit resolution) analog sample value after conversion to a floating-point value \u2013 for example in the ADC sample value is 1024 then it must be stored as 1024.000 as a floating-point value.  Floating-point analog data storage is organized in exactly the same way, within the C3D file data section, as the integer analog data.  The stored analog data values must never be stored as pre-scaled values as this effectively destroys vital information about the analog data sampling and processing.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/analog-data-section/analog-data-floating-point-format/notes-for-programmers-floating-point-analog-data":{"id":"the-3d-point-data-section/analog-data-section/analog-data-floating-point-format/notes-for-programmers-floating-point-analog-data","title":"Notes for programmers - Floating-point Analog Data","description":"1.  While data can be converted from integer to floating-point without any loss of resolution, the precision of the reverse operation from floating-point to integer conversion is not guaranteed if the analog data has been pre-scaled and the analog parameters have not been set correctly.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/analog-data-section/analog-data-integer-format/index":{"id":"the-3d-point-data-section/analog-data-section/analog-data-integer-format/index","title":"Analog Data - Integer Format","description":"When storing analog data using the integer C3D format, each binary sample value generated by the ADC is stored as a 16-bit integer.  By default these samples were originally stored as signed integer values although common ADC resolutions meant that all recorded values fell into the range of 0 to 32767 as positive values \u2013 negative integer sample values do not exist.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/analog-data-section/analog-data-integer-format/notes-for-programmers-integer-analog-data":{"id":"the-3d-point-data-section/analog-data-section/analog-data-integer-format/notes-for-programmers-integer-analog-data","title":"Notes for programmers - Integer Analog Data","description":"1.  By default, all analog samples are stored as 16-bit integers with values from 0 to the maximum resolution of the ADC.  The actual resolution and format of the data may be recorded by setting the optional ANALOGBITS parameter to the actual number of bits used, i.e., the value 12, 14, or 16.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/analog-data-section/index":{"id":"the-3d-point-data-section/analog-data-section/index","title":"Analog Data Storage","description":"Although the method of storing the analog sample values is different between the Integer and Floating-point versions of the C3D file format, both versions organize the individual analog data samples in the same way within the 3D Data section of the C3D file.  The analog record for each 3D frame can contain one or more analog data samples where each analog data sample consists of one or more analog measurements (channels) usually recorded from an ADC (analog to digital converter) during the 3D frame sample period.  The parameter ANALOGUSED stores the number of analog measurements, or channels, within each analog data sample.  All of this data is recorded at a 3D frame rate whose value is recorded in the POINT:RATE parameter.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/description/3d-data-floating-point-format/index":{"id":"the-3d-point-data-section/description/3d-data-floating-point-format/index","title":"3D Data - Floating-point Format","description":"If the POINTSCALE parameter is not used to apply a scaling factor to the data.  It is however used to calculate the point residual value and may be applied to the data if the file is converted to an integer format so it is important to calculate a valid POINT:SCALE factor when 3D points are stored as floating-point values.  Since the floating-point format require eight 16-bit words to store a single 3D point, it will result in C3D files that are double the size of integer format C3D files.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/description/3d-data-floating-point-format/notes-for-programmers-floating-point-3d-data":{"id":"the-3d-point-data-section/description/3d-data-floating-point-format/notes-for-programmers-floating-point-3d-data","title":"Notes for programmers - Floating-point 3D Data","description":"1.  The POINT:SCALE parameter is copied to the C3D file header (words 7-8) and can be quickly located and read by applications once they have determined which of the C3D processor formats (DEC, Intel, and SGI/MIPS) is used.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/description/3d-data-integer-format/index":{"id":"the-3d-point-data-section/description/3d-data-integer-format/index","title":"3D Data - Integer Format","description":"If the POINTSCALE parameter is one of the parameter section values that is copied to the C3D file header (words 7-8) and can be quickly located and read by software applications without requiring a detailed search of the parameter section.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/description/3d-data-integer-format/notes-for-programmers-integer-3d-data":{"id":"the-3d-point-data-section/description/3d-data-integer-format/notes-for-programmers-integer-3d-data","title":"Notes for programmers - Integer 3D Data","description":"1.  Each 3D coordinate is stored as three 16-bit signed integers + the camera mask and residual.  Each of the integer values is generated by dividing the physical world coordinate by the POINTUNITS divided by 32000.  Note that adding any additional data to the stored 3D data will require that the POINT:SCALE factor is recalculated and all existing data points stored as signed integers are rescaled if any new data values exceed the existing maximum coordinate value.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/description/3d-point-residuals":{"id":"the-3d-point-data-section/description/3d-point-residuals","title":"3D Point Residuals","description":"All 3D points recorded in the C3D file have the capability of recording a residual measurement value \u2013 the marker residual is an important number that documents the accuracy of each individual 3D location measurement.  Although the concepts behind the calculation of the 3D point residual are based on optical photogrammetry, the function of the residual measurement is to document the measurement accuracy so the general principals can be applied to all 3D measurement techniques enabling users to determine the relative accuracy of each measurement recorded in the file.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/description/camera-contribution-mask":{"id":"the-3d-point-data-section/description/camera-contribution-mask","title":"Camera Contribution Mask","description":"In addition to a 3D residual value, the 3D coordinate format can also provide information about which observers (generally but not necessarily, cameras) provided the information used to calculate the associated 3D point location.  This information is called the \u201ccamera contribution\u201d or \u201ccamera mask\u201d and is stored, together with the 3D residual, in the fourth word of the 3D point record.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/description/index":{"id":"the-3d-point-data-section/description/index","title":"Description","description":"All related 3D point and analog data samples are written as sequential frames starting in the 512-byte block in the C3D file specified by the POINT:DATA_START parameter.  If each frame contains both 3D point and analog information then the 3D point data is written first, starting with the first frame of data, followed by multiple analog data samples associated with the 3D frame.  If there is only a single type of data (either 3D point data, or only analog data) then the data section will simply consist of sequential frames of data samples.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/index":{"id":"the-3d-point-data-section/index","title":"The 3D Point Data Section","description":"The C3D file format is designed to store 3D point and analog information so that the stored 3D locations (stored as XYZ coordinates) can be synchronized with any number of analog measurements.  Information to interpret the 3D/analog section contents is stored as parameters that describe the 3D sample rates, analog sample rates, and the number of sampled points and analog channels, together with information documenting the data in each channel, allowing users to determine the structure and contents of the stored data each time that a new C3D file is read.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/scaling-resolution/3d-point-data":{"id":"the-3d-point-data-section/scaling-resolution/3d-point-data","title":"3D Point Data","description":"In the C3D file format, 3D point data was originally intended to store marker position data within a calibrated volume.  Hence, the data would be homogeneous in the sense that units and relative scales of each point data item would be the same.  When stored in integer form, the stored 16-bit signed integer value must be multiplied by the POINT:SCALE floating-point scaling factor (header words 7-8) to yield a physical world value \u2013 generally all 3D data points locations are recorded in millimeters which is the default measurement unit for 3D data in C3D files.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/scaling-resolution/analog-data":{"id":"the-3d-point-data-section/scaling-resolution/analog-data","title":"Analog Data","description":"You must ensure that all ANALOGSCALE parameters are set to values that scale the analog data in meaningful ways.  Thus force plate data channels will contain ANALOGSCALE values that make sense and are described in the ANALOGDESCRIPTIONS entries.","sidebar":"tutorialSidebar"},"the-3d-point-data-section/scaling-resolution/index":{"id":"the-3d-point-data-section/scaling-resolution/index","title":"Scaling Resolution","description":"The C3D format description requires that sensible analog and point scale values are used, on the assumption that anyone creating C3D files would realize the folly of choosing inappropriate scale values.  The following sections discuss some factors that influence the choice of scaling factors for both point and analog data.","sidebar":"tutorialSidebar"},"the-c3d-file-format/index":{"id":"the-c3d-file-format/index","title":"The C3D File Format","description":"The C3D File Format specifications were originally outlined by Edmund Cramp and maintained by him until the end of 2023. At such time, the C3D Community CIC took over the obligation to maintain the C3D specification. Any included material written in first person was written by Ed and his experience with the C3D file format.","sidebar":"tutorialSidebar"},"the-c3d-file-format/revision-history":{"id":"the-c3d-file-format/revision-history","title":"Revision History","description":"The C3D file specification was previously a document where a manual revision history was necessary. At this time, the C3D file specification is maintained as a website and revision history is automatically maintained on GitHub.","sidebar":"tutorialSidebar"},"the-c3d-file-format/use-and-distribution":{"id":"the-c3d-file-format/use-and-distribution","title":"Use and Distribution","description":"This document may be copied and distributed in its entirety for any commercial or non-commercial use, subject to the provisions below.  It is recommended that this document is included with all software applications that create or use C3D files to provide users with a full C3D format description and documentation.","sidebar":"tutorialSidebar"},"the-header-section/header-events/event-interpretation":{"id":"the-header-section/header-events/event-interpretation","title":"Event Interpretation","description":"The C3D format does not specify the meaning or interpretation of the events stored in the header section although the original intent of this feature was to allow a small number of human gait related event times to be recorded by any application.  As a result, C3D file may contain a varied number of events and labels.","sidebar":"tutorialSidebar"},"the-header-section/header-events/event-labels":{"id":"the-header-section/header-events/event-labels","title":"Event Labels","description":"A unique four-character label ASCII using the characters A-Z, a-z, 0-9, and space can be assigned to identify each event.  Labels shorter than four characters must be filled to four characters by adding spaces (ASCII 0x20h, 32 decimal) to the end of the label.  The event labels are stored in the same sequence as the event times and status flags. Since users applications may search for various labels by name it is essential that the names used in any individual C3D file are unique \u2013 storing two successive right heel strikes as \u201cRHS\u201d opens the possibility of third-party analysis errors, whereas storing the events as RHS1 and RHS2 means that each event can be uniquely identified and referenced. Event labels must be stored as 7-bit ASCII characters; UTF-8 encoding is not permitted due to the limited space available.","sidebar":"tutorialSidebar"},"the-header-section/header-events/event-status":{"id":"the-header-section/header-events/event-status","title":"Event Status","description":"Words 189 to 197 contain flags that indicate the status of each event.  Each word contains two byte-sized flags stored in the same order as the event times.  The byte-flags are set to 0x01h if the event status is ON and 0x00h if the event is OFF.","sidebar":"tutorialSidebar"},"the-header-section/header-events/event-times":{"id":"the-header-section/header-events/event-times","title":"Event Times","description":"The event times are stored in the order in which they are written and may not have any logical order.  Header words 153 through 188 stores up to 18 event times in floating-point format.  Each event time is recorded as the number of seconds and fractions of a second that have elapsed since the first frame (designated as 0.0s) of data recorded in the C3D file.","sidebar":"tutorialSidebar"},"the-header-section/header-events/index":{"id":"the-header-section/header-events/index","title":"Header Events","description":"Header events were added to the C3D format to allow applications to record timing information, relevant to the recorded data, for gait analysis \u2013 typically recording events like left/right heel-contact and toe-off information as the subject walked across one or more force plates.  This feature ensures that gait analysis and other data processing programs perform their calculations in a repeatable manner using the event times to determine the gait cycle data analysis timing.","sidebar":"tutorialSidebar"},"the-header-section/header-record-function/index":{"id":"the-header-section/header-record-function/index","title":"Header Record Function","description":"The values stored in the C3D file header record (the first 12 words in the C3D file header section) define the C3D file structure and basic content format, enabling an application to open a C3D file and determine the file structure, contents, section locations and the C3D file size.  For example:","sidebar":"tutorialSidebar"},"the-header-section/header-record-function/notes-for-programmers-c3d-header":{"id":"the-header-section/header-record-function/notes-for-programmers-c3d-header","title":"Notes for Programmers - C3D Header","description":"1.  The first word in the C3D file header must be read as two bytes so that it is unaffected by the C3D file endian format.  The first byte is a pointer that locates the start of the C3D parameter section.","sidebar":"tutorialSidebar"},"the-header-section/index":{"id":"the-header-section/index","title":"The Header Section","description":"A 512-byte block is found at the beginning of all C3D files, referred to as the Header Section.  The first 12 words of the header section form a record containing basic information about the contents of the C3D file.","sidebar":"tutorialSidebar"},"the-parameter-section/c3d-groups-and-parameters/group-format":{"id":"the-parameter-section/c3d-groups-and-parameters/group-format","title":"Group Format","description":"The first byte of a C3D group record is a one\u2019s complement signed 8-bit integer that stores the number of characters in the group name.  Group names can have from 1 to 127 characters (using the standard ASCII character set; A-Z, underscore, and 0-9) although four characters should generally be considered a minimum and twenty characters plenty.  The group name is simple a \u201cname\u201d that if used to reference the associated collection of parameters, it does not have to be long and descriptive \u2013 use the group description string to document its functionality.  All group names must start with the characters A-Z. The character count is always read as a positive number regardless of the actual sign of the stored value.","sidebar":"tutorialSidebar"},"the-parameter-section/c3d-groups-and-parameters/index":{"id":"the-parameter-section/c3d-groups-and-parameters/index","title":"C3D Groups and Parameters","description":"It is useful at this point to review the concepts behind groups and parameters within the C3D file.  Information that describes the data within the C3D file, or the data collection environment, is stored in the file as \u201cparameters\u201d - since many of these items are related (e.g. the number of 3D points, their names and descriptions) they are gathered together in \u201cgroups.\u201d This concept allows users to have a simple, easy to remember, name for a parameter and then use the name in several different places.","sidebar":"tutorialSidebar"},"the-parameter-section/c3d-groups-and-parameters/locked-parameters/index":{"id":"the-parameter-section/c3d-groups-and-parameters/locked-parameters/index","title":"Locked Parameters","description":"The parameter and group locked flag is set by storing the length of the group or parameter name as a one\u2019s complement signed 8-bit integer, a negative length indicates a locked parameter or group while a positive length indicates that it is unlocked.  Note that while many integer values in C3D files are treated as unsigned values, the name lengths must always be read and written as signed integers","sidebar":"tutorialSidebar"},"the-parameter-section/c3d-groups-and-parameters/locked-parameters/notes-for-programmers-parameters-and-groups":{"id":"the-parameter-section/c3d-groups-and-parameters/locked-parameters/notes-for-programmers-parameters-and-groups","title":"Notes for Programmers - Parameters and Groups","description":"1.  All parameter and group names must be stored using 7-bit ASCII format characters to maintain compatibility with applications that read C3D files.  UTF-8 encoding is not allowed for the group and parameter names.","sidebar":"tutorialSidebar"},"the-parameter-section/c3d-groups-and-parameters/parameter-arrays":{"id":"the-parameter-section/c3d-groups-and-parameters/parameter-arrays","title":"Parameter Arrays","description":"The parameter format used by arrays is similar to the scalar parameters with the addition of a series of byte values that describe the array dimensions.  For example, the CORNERS parameter in the FORCE_PLATFORM group (which is always a 3, 4, n array where n is the number of plates supported) is stored as follows:","sidebar":"tutorialSidebar"},"the-parameter-section/c3d-groups-and-parameters/parameter-format":{"id":"the-parameter-section/c3d-groups-and-parameters/parameter-format","title":"Parameter Format","description":"The first byte in the parameter record is a one\u2019s complement signed integer that stores the number of characters in the parameter name.  This can be a positive or negative number, a positive number indicates that the parameter is unlocked and any application can change it.  A negative count indicates that the parameter is locked and should not be changed without careful consideration of the consequences.  Parameter names can have from 1 to 127 ASCII characters (using the 7-bit characters A-Z, 0-9 and underscore) although four characters should generally be considered a minimum.  UTF-8 encoding is not permitted in parameter names.","sidebar":"tutorialSidebar"},"the-parameter-section/index":{"id":"the-parameter-section/index","title":"The Parameter Section","description":"All C3D files contain a parameter section that stores information about the data C3D file contents.  It stores information that describes the data stored in the file so that any user opening the file can process the contents once the parameter section has been read and the user understands the parameters.  The parameter section header records the endian format that defines the storage method for all 16-bit integers and 32-bit floating-point values stored in the C3D file, so the parameter section must be located and read before most of the C3D file header values can be interpreted.","sidebar":"tutorialSidebar"},"the-parameter-section/parameter-header":{"id":"the-parameter-section/parameter-header","title":"Parameter Header","description":"The C3D file header contains a pointer to the first block of the parameter section in the C3D file.  The first four bytes of the first block in the parameter section contain the following parameter record header:","sidebar":"tutorialSidebar"}}}}')}}]);