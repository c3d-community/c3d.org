"use strict";(globalThis.webpackChunkc_3_d_org=globalThis.webpackChunkc_3_d_org||[]).push([[2591],{3938:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"required-parameters/index","title":"Required Parameters","description":"A basic set of parameters must exist in every C3D file.  Applications that read C3D files will need to find these parameters whenever a C3D file is opened to interpret the data section.  The parameters described in this section must exist in all C3D files to maintain C3D file compatibility because they describe the contents of the C3D file data.  All parameter data values are stored in a common format and can be examined and modified by applications.","source":"@site/docs/required-parameters/index.md","sourceDirName":"required-parameters","slug":"/required-parameters/","permalink":"/c3d.org/required-parameters/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Required Parameters"},"sidebar":"tutorialSidebar","previous":{"title":"Glossary of Terms","permalink":"/c3d.org/glossary-of-terms"},"next":{"title":"The ANALOG group","permalink":"/c3d.org/required-parameters/the-analog-group/"}}');var i=a(4848),n=a(8453);const o={title:"Required Parameters"},s=void 0,d={},l=[{value:"Overview",id:"overview",level:2}];function c(e){const t={h2:"h2",p:"p",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"A basic set of parameters must exist in every C3D file.  Applications that read C3D files will need to find these parameters whenever a C3D file is opened to interpret the data section.  The parameters described in this section must exist in all C3D files to maintain C3D file compatibility because they describe the contents of the C3D file data.  All parameter data values are stored in a common format and can be examined and modified by applications."}),"\n",(0,i.jsx)(t.p,{children:"The term parameter in a C3D file refers to certain quantities that may need to be communicated to programs that access the C3D file in order to process the data or read the file correctly.  Some of these values are critical to the interpretation of the data and are locked, indicating that they should not be casually changed as they may affect the file format or interpretation of the data.  Unlocked parameters exist to provide useful descriptive information stored in parameter format for convenient access and reference by the user who may update and edit unlocked parameters to document the contents of the C3D file during data processing."}),"\n",(0,i.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(t.p,{children:"C3D files contains many different parameters \u2013 some of these are essential and are found in every C3D file , while other parameters will only be seen in C3D files from specific manufacturers, or are parameters generated by post-processing of the data.  This situation is complicated by the inherently general nature of the C3D file.  Most C3D files contain 3D point data and analog data related to the 3D data \u2013 however, it is possible to generate valid C3D files that contain only 3D data, or C3D files that contain only analog data, or data from other sensors.  All C3D files must include the parameters described here even if they only serve to indicate that the file does not have a particular data type."}),"\n",(0,i.jsx)(t.p,{children:"Not all parameters are intended to be editable \u2013 the parameter record contains a locking mechanism that should be set to indicate that a parameter should not be modified by the user after it has been set by a program.  Such parameters are either assigned values by programs (and inappropriate values could cause other programs using that data to malfunction), or else contain data of an informational nature (e.g., the name of the manufacturer or application that created the file, which should not generally be changed."}),"\n",(0,i.jsx)(t.p,{children:"Applications may change locked parameters if necessary but please be aware that changing a locked parameter will always have consequences, and if a locked parameter is edited, always lock the parameter after any changes have been made."})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>s});var r=a(6540);const i={},n=r.createContext(i);function o(e){const t=r.useContext(n);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);