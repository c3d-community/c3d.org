<?xml version="1.0" encoding="utf-8"?>
<html><head><title>The Parameter Section</title>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type" /><link rel="stylesheet" type="text/css" href="../Theme/nav.css" /><link rel="stylesheet" type="text/css" href="../Theme/popupmenu.css" /><link rel="stylesheet" type="text/css" href="../Theme/lf.css" /><link rel="stylesheet" type="text/css" href="../LinksExt/C1H_HTML.css" /><link rel="stylesheet" type="text/css" href="../LinksExt/C3D User Guide.css" />
<script type="text/javascript">
//<![CDATA[



var _needIndentation = false;




//]]></script>

<script language="JavaScript" src="../linker.js" type="text/JavaScript"></script>

<script language="JavaScript" src="../special.js" type="text/JavaScript"></script>

<script language="JavaScript" src="../common.js" type="text/JavaScript"></script>

<meta name="Generator" content="ComponentOne Doc-To-Help v.2009.3.0.500" />
<meta name="D2HTheme" content="C3D v.138" />
</head>
<body onload="d2hOnLoadToolbar(event);" style="OVERFLOW: hidden; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent" relpart="../">
<script language="javascript" type="text/javascript">
//<![CDATA[



d2hTopicPreOpen();



d2hTrySyncTOC();







var prev = true;





var next = true;



if (typeof d2hInitMainThemeHandlers != "undefined")

    d2hInitMainThemeHandlers(prev, next);

d2hAdjustTopicBorders(document);    



if (typeof d2hLoadWindows != "undefined")

    d2hLoadWindows();

if (typeof d2hLoadNavUrls != "undefined")

    d2hLoadNavUrls();




//]]></script>

<div id="D2HTopicOuterBody" class="d2h_outer_topic" style="OVERFLOW: auto; HEIGHT: 100%; WIDTH: 100%; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent">
<div id="nsbanner" class="d2hNavigatorTopic">
<div id="TitleRow" class="d2h_main_titlerow" style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px">
<div style="DISPLAY: none"><a id="D2HPreviousAnchor" href="notesforprogrammersc3dheader.htm"></a><a id="D2HNextAnchor" href="parameterheader.htm"></a></div>
<script language="JavaScript" type="text/JavaScript">
//<![CDATA[

var USE_FLAT_BUTTONS = true;

var BTN_SELECTED = "";

var BTN_HOVER = "";

var IS_MODERN = false;

var HAS_MARGIN_CLASSIC_BORDER = false;


//]]></script>

<div id="ienav" class="d2h_main_ienav">
<table id="tblNavigator" class="D2HTopicToolbarOuter" cellspacing="0" cellpadding="0" width="100%" border="0">
  <tbody>
  <tr class="D2HTopicToolbarOuter">
    <td class="D2HTopicToolbar" align="left">
      <table class="D2HTopicToolbar" style="MARGIN-LEFT: 4px" cellspacing="0" cellpadding="0">
        <tbody>
        <tr class="D2HTopicToolbar">
          <td class="D2HTopicToolbar">
            <table class="D2HTopicToolbar" cellspacing="0" cellpadding="0">
              <tbody>
              <tr class="D2HTopicToolbar">
                <td id="D2HBreadcrumbs" class="d2hCellTopic" nowrap="" caption=""><a target="right"><span class="D2HBreadcrumbsUnselected"><span style="TEXT-DECORATION: none"> </span></span></a></td></tr></tbody></table></td>
          <td class="D2HTopicToolbar" nowrap=""><span class="D2HBreadcrumbsUnselected" style="TEXT-DECORATION: none"> </span></td></tr></tbody></table></td>
    <td class="D2HTopicToolbar" align="center">
      <table class="D2HTopicToolbar" cellspacing="0" cellpadding="0">
        <tbody>
        <tr class="D2HTopicToolbar"></tr></tbody></table></td>
    <td class="D2HTopicToolbar" align="right">
      <table class="D2HTopicToolbar" cellspacing="0" cellpadding="0">
        <tbody>
        <tr class="D2HTopicToolbar">
          <td class="D2HTopicToolbar" nowrap=""><span class="D2HEmailUnselected" style="TEXT-DECORATION: none"> </span></td>
          <td class="D2HTopicToolbar">
            <table class="D2HTopicToolbar" cellspacing="0" cellpadding="0">
              <tbody>
              <tr class="D2HTopicToolbar">
                <td onclick="d2hCommand('D2HEmail')" id="D2HEmail" class="d2hCellTopic" nowrap=""><a href="javascript:void(0);"><span class="D2HEmailUnselected">Email<span style="TEXT-DECORATION: none"> </span></span></a></td></tr></tbody></table></td>
          <td class="D2HTopicToolbar" width="5" nowrap=""> </td></tr></tbody></table></td></tr></tbody></table></div></div>
<script language="javascript" type="text/javascript">
//<![CDATA[

if (typeof d2hProcessTopicNavForCSH != "undefined")

    d2hProcessTopicNavForCSH();


//]]></script>
</div>
<div id="nstext" class="d2h_main_nstext" style="PADDING-BOTTOM: 10px; PADDING-TOP: 5px; PADDING-LEFT: 22px; PADDING-RIGHT: 10px" valign="bottom">
<h1>The Parameter Section</h1>
<p class="MsoBodyText">All C3D files contain a parameter <a onclick="return d2hpopup(event, this.href)" id="popup_103699" href="gloss_section.htm">section</a> that stores information about the data C3D 
file contents.  It stores information that describes the data stored in the 
file so that any user opening the file can process the contents once the 
parameter section has been read and the user understands the <a onclick="return d2hpopup(event, this.href)" id="popup_103697" href="gloss_parameters.htm">parameters</a>.  The parameter section header 
<a onclick="return d2hpopup(event, this.href)" id="popup_103698" href="gloss_records.htm">records</a> the <a onclick="return d2hpopup(event, this.href)" id="popup_103700" href="gloss_endian.htm">endian</a> format that defines the storage method for 
all 16-bit integers and 32-bit <a onclick="return d2hpopup(event, this.href)" id="popup_103696" href="gloss_floatingpoint1.htm">floating-point</a> values stored 
in the C3D file, so the parameter section must be located and read before most 
of the C3D file header values can be interpreted.</p>
<p class="MsoBodyText" style="PAGE-BREAK-AFTER: avoid"><img style="HEIGHT: 59.3pt; WIDTH: 342pt" border="0" src="../ImagesExt/image9_6.png" alt="" /></p>
<p class="MsoCaption" style="MARGIN-LEFT: 0pt">Figure 7 - The parameter section 
location within the C3D file structure.</p><a class="_D2HAnchor" name="overview5.htm" id="overview5.htm"></a>
<p class="MidTopic">Overview</p>
<p class="MsoBodyText">While the C3D file header describes basic information about 
the contents of a C3D file (the number of 3D points, analog channels and sample 
rates etc.) it is the information in the parameter <a onclick="return d2hpopup(event, this.href)" id="popup_103708" href="gloss_section.htm">section</a> of the file that <a onclick="return d2hpopup(event, this.href)" id="popup_103706" href="gloss_records.htm">records</a> the details that make the contents of the 
file intelligible.  For instance, the C3D header may tell you that the file 
contains 50 frames of data, each containing 20 3D points; however it is the <a onclick="return d2hpopup(event, this.href)" id="popup_103704" href="gloss_parameters.htm">parameters</a> that may tell you that the 10th point 
in each frame is labeled “LTHI” and is described as the “Left Thigh Wand 
Marker”.</p>
<p class="MsoBodyText">All parameters are organized into “groups” with unique <a onclick="return d2hpopup(event, this.href)" id="popup_103711" href="gloss_ascii.htm">ASCII</a> group names so that related parameters (e.g., 
all the parameters containing information about the analog data in a C3D file) 
can be located and their associations identified.  All groups and 
parameters support an optional <a onclick="return d2hpopup(event, this.href)" id="popup_103710" href="gloss_utf8.htm">UTF-8</a> description string to document 
their function, allowing users worldwide to open a C3D file and understand the 
contents.</p>
<p class="MsoBodyText" style="MARGIN-LEFT: 0pt">When described and documented, the 
<a onclick="return d2hpopup(event, this.href)" id="popup_103701" href="groupnameandparametername.htm">group name and parameter name</a> are 
separated by a colon (:) so that when the parameter “<span class="ParameterChar"><span style="FONT-SIZE: 9pt">SCALE</span></span>” belongs to 
the “<span class="ParameterChar"><span style="FONT-SIZE: 9pt">ANALOG</span></span>” group will be written as <span class="ParameterChar"><span style="FONT-SIZE: 9pt">ANALOG:SCALE</span></span> – 
the group name always precedes the parameter name.  The ability to 
reference parameters in this way allows similar parameters with different 
functions to exist in the same file without any risk of confusion.  Thus, 
the <span class="ParameterChar"><span style="FONT-SIZE: 9pt">SCALE</span></span> 
parameter <span class="ParameterChar"><span style="FONT-SIZE: 9pt">ANALOG:SCALE</span></span> is different from the 
parameter <span class="ParameterChar"><span style="FONT-SIZE: 9pt">POINT:SCALE</span></span>, the function of each parameter 
should be described by the associated parameter description string to help 
document the file contents.</p>
<p class="MsoBodyText">All parameter or group names consist of 7-bit ASCII <a onclick="return d2hpopup(event, this.href)" id="popup_103705" href="gloss_characters.htm">characters</a>, letters A through Z, the numerals 0 
through 9, and the underscore character “_”, other punctuation or printable 
characters may not be used and UTF-8 encoding is not permitted in group or 
parameter names.  All parameter and group names must start with letters A 
through Z.  When applications read group and parameter names, the case of 
the parameter or group name is not significant and punctuation characters should 
be ignored.  For example the label <span class="ParameterChar"><span style="FONT-SIZE: 9pt">h00b00m2</span></span> must be read as <span class="ParameterChar"><span style="FONT-SIZE: 9pt">H00B00M2</span></span> and the 
labels <span class="ParameterChar"><span style="FONT-SIZE: 9pt">L.Post.Fem.</span></span> and <span class="ParameterChar"><span style="FONT-SIZE: 9pt">Acc_2:X </span></span>must be 
read as <span class="ParameterChar"><span style="FONT-SIZE: 9pt">LPOSTFEM</span></span> and <span class="ParameterChar"><span style="FONT-SIZE: 9pt">ACC_2X</span></span> to 
guarantee universal access to the data.</p>
<p class="MsoBodyText" style="MARGIN-LEFT: 0pt">For compatibility between software 
applications, the original C3D specification stated that when a <a onclick="return d2hpopup(event, this.href)" id="popup_103702" href="parameterorgroupname.htm">parameter or group name</a> is interpreted then 
only the first six characters of the group name and the first six characters of 
the parameter name are used.  It is essential that all group names, and all 
parameter names within each group, are unique.  The same names may only be 
used for two parameters if they occur in different groups, e.g. both <span class="ParameterChar"><span style="FONT-SIZE: 9pt">POINT:SCALE</span></span> and 
<span class="ParameterChar"><span style="FONT-SIZE: 9pt">ANALOG:SCALE</span></span> parameters are permitted; but 
<span class="ParameterChar"><span style="FONT-SIZE: 9pt">POINT:MARKER_UNITS</span></span> and <span class="ParameterChar"><span style="FONT-SIZE: 9pt">POINT:MARKER_ID</span></span> 
may cause problems because the first six characters in both parameter names are 
identical.</p>
<p class="MsoBodyText">A parameter’s type determines the data that may be stored 
in the parameter.  Four parameter types are available; <a onclick="return d2hpopup(event, this.href)" id="popup_103707" href="gloss_integer.htm">integer</a>, <a onclick="return d2hpopup(event, this.href)" id="popup_103703" href="gloss_floatingpoint1.htm">floating-point</a>, character, and byte.  
An integer is normally a one's complement 16-bit signed number with a range of 
-32767 to +32767 although when used as a pointer, 16-bit integers are normally 
unsigned with a range of 1 to 65535.  32-bit floating-point numbers are 
written in scientific exponential representation, characters are symbols such as 
a letter entered from the keyboard, and a byte can contain a one’s complement 
8-bit signed integer in the range -127 to +127 or an unsigned integer with a 
range of 0 to +255.</p>
<p class="MsoBodyText">While C3D files contain both signed and unsigned values in 
the parameter section, certain items such as the parameter and group ID numbers 
and lengths must always be read as signed integers because the sign affects the 
parameter structure.  However the dimensions of a parameter define how many 
elements are stored in the parameter so dimensions are always positive 
values.  The term <em><span style="FONT-FAMILY: &quot;Verdana&quot;,&quot;sans-serif&quot;">dimension</span></em> is a 
programming convention - if a parameter has no dimensions then it may only hold 
one value of its data type, for example one dimension it is presented in the 
form such as <span class="ParameterChar"><span style="FONT-SIZE: 9pt">PARM(4)</span></span> where the 4 indicates that the 
parameter called <span class="ParameterChar"><span style="FONT-SIZE: 9pt">PARM</span></span> is capable of holding four 
values.  Examples of two- and three-dimensional parameter <a onclick="return d2hpopup(event, this.href)" id="popup_103709" href="gloss_arrays.htm">arrays</a> are <span class="ParameterChar"><span style="FONT-SIZE: 9pt">PARMA(4,5)</span></span> and <span class="ParameterChar"><span style="FONT-SIZE: 9pt">PARMB(3,5,7)</span></span>.  The first example has 4 
x 5 = 20 elements, and the second parameter holds 3 x 5 x 7 = 105 entries.</p>
<p class="RelatedHead">More:</p>
<p class="MsoNormal"><a style="TEXT-DECORATION: none" href="parameterheader.htm"><img border="0" alt="" src="../button.gif" align="absMiddle" />Parameter header</a></p>
<p class="MsoNormal"><a style="TEXT-DECORATION: none" href="c3dgroupsandparameters.htm"><img border="0" alt="" src="../button.gif" align="absMiddle" />C3D Groups and Parameters</a></p></div></div></body></html>
