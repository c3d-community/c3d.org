<?xml version="1.0" encoding="utf-8"?>
<html><head><title>Floating-point</title>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type" /><link rel="stylesheet" type="text/css" href="../Theme/popupmenu.css" /><link rel="stylesheet" type="text/css" href="../Theme/lf.css" /><link rel="stylesheet" type="text/css" href="../LinksExt/C1H_HTML.css" /><link rel="stylesheet" type="text/css" href="../LinksExt/Glossary.css" />
<script language="JavaScript" src="../linker.js" type="text/JavaScript"></script>

<script language="JavaScript" src="../special.js" type="text/JavaScript"></script>

<script language="JavaScript" src="../common.js" type="text/JavaScript"></script>

<meta name="Generator" content="ComponentOne Doc-To-Help v.2009.3.0.500" />
<meta name="D2HTheme" content="C3D v.138" />
</head>
<body onmousedown="d2hpopup()" onload="d2hload();d2hProcessHighlight();" style="BACKGROUND-COLOR: lightyellow" relpart="../">
<script language="JavaScript" type="text/JavaScript">
//<![CDATA[

if (typeof d2hLoadWindows != "undefined")

    d2hLoadWindows();


//]]></script>

<p class="GlossaryHeading">Floating-point</p>
<p class="MsoBodyText">The C3D format supports a single-precision floating-point 
format stored in 32 bits (two words) in the C3D file – this is called <a onclick="return d2hpopup(event, this.href)" id="popup_104314" href="gloss_real.htm">REAL</a>*4 in FORTRAN documentation and REAL the original 
C3D documentation.  Each C3D file processor type (DEC, SGI/MIPS and Intel) 
defines a slightly different internal floating-point format. Intel and SGI/MPIS 
use the IEEE-754 format, stored in little <a onclick="return d2hpopup(event, this.href)" id="popup_104313" href="gloss_endian.htm">endian</a> for Intel and big endian format for SGI/MIPS 
processors.</p>
<p class="MsoBodyText">The DEC floating-point format has the same mantissa with 
"hidden 1 bit", an offset binary exponent to the left of the mantissa, but when 
the numbers are negative, DEC stores the value as the 2's complement of the 
positive value. This means that the DEC format can only store a zero with no 
sign associated because, unlike the Intel format, there is no ability to store 
both positive and negative zero representations.</p></body></html>
